{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project_Mirea\\risk-box\\front-end\\src\\core\\http-client.js","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\core\\http-client.js","mtime":1556591576361},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556556014088}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _ from 'lodash';\nimport { REQUEST_HEADER_AUTH } from \"./constant\";\nexport var REQUEST_METHOD = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE'\n};\nexport var HTTPClient =\n/*#__PURE__*/\nfunction () {\n  function HTTPClient(axios) {\n    _classCallCheck(this, HTTPClient);\n\n    if (!_.isObject(axios) && _.isEmpty(axios)) {\n      throw 'Please provide correct AXIOS instance.';\n    }\n\n    this.axiosInstance = _.cloneDeep(axios);\n  }\n\n  _createClass(HTTPClient, [{\n    key: \"setAccessToken\",\n    value: function setAccessToken(access_token) {\n      if (_.isString(access_token) && _.trim(access_token) != '') {\n        this.axiosInstance.defaults.headers.common[REQUEST_HEADER_AUTH] = \"\".concat(access_token);\n      } else {\n        _.omit(this.axiosInstance.defaults.headers.common, [REQUEST_HEADER_AUTH]);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(url) {\n        var requestParams,\n            headers,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                requestParams = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                headers = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n                if (_.isString(url)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw 'String value of URL must correct';\n\n              case 4:\n                _context.next = 6;\n                return _request(this.axiosInstance, url, REQUEST_METHOD.GET, headers, requestParams, {});\n\n              case 6:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"post\",\n    value: function () {\n      var _post = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(url) {\n        var requestBody,\n            headers,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                requestBody = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n                headers = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n\n                if (_.isString(url)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                throw 'String value of URL must correct';\n\n              case 4:\n                _context2.next = 6;\n                return _request(this.axiosInstance, url, REQUEST_METHOD.POST, headers, {}, requestBody);\n\n              case 6:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function post(_x2) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(url) {\n        var requestBody,\n            headers,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                requestBody = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                headers = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n\n                if (_.isString(url)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw 'String value of URL must correct';\n\n              case 4:\n                _context3.next = 6;\n                return _request(this.axiosInstance, url, REQUEST_METHOD.PUT, headers, {}, requestBody);\n\n              case 6:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function put(_x3) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(url) {\n        var requestParams,\n            headers,\n            _args4 = arguments;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                requestParams = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n                headers = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n\n                if (_.isString(url)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw 'String value of URL must correct';\n\n              case 4:\n                _context4.next = 6;\n                return _request(this.axiosInstance, url, REQUEST_METHOD.DELETE, headers, requestParams, {});\n\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _delete(_x4) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"upload\",\n    value: function () {\n      var _upload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(url) {\n        var requestBody,\n            headers,\n            _args5 = arguments;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                requestBody = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n                headers = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : {};\n\n                if (_.isString(url)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw 'String value of URL must correct';\n\n              case 4:\n                headers['Content-Type'] = 'multipart/form-data';\n                _context5.next = 7;\n                return _request(this.axiosInstance, url, REQUEST_METHOD.POST, headers, {}, requestBody);\n\n              case 7:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function upload(_x5) {\n        return _upload.apply(this, arguments);\n      }\n\n      return upload;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(url, method) {\n        var headers,\n            requestParams,\n            requestBody,\n            _args6 = arguments;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                headers = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};\n                requestParams = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : {};\n                requestBody = _args6.length > 4 && _args6[4] !== undefined ? _args6[4] : {};\n\n                if (!(!_.includes(_.keys(REQUEST_METHOD), method) || !_.isString(url))) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                throw 'HTTPClient only support [GET, POST, PUT, DELETE]';\n\n              case 5:\n                _context6.next = 7;\n                return _request(this.axiosInstance, url, method, headers, requestParams, requestBody);\n\n              case 7:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function request(_x6, _x7) {\n        return _request2.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return HTTPClient;\n}();\nvar SUPPORT_REQ_BODY = [REQUEST_METHOD.POST, REQUEST_METHOD.PUT];\n\nvar _request =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(axios, url, method, headers, requestParams, requestBody) {\n    var params, data, transformRequest, transformResponse, response;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            params = {};\n\n            if (!_.isEmpty(requestParams)) {\n              params = new URLSearchParams(requestParams);\n            }\n\n            data = {};\n\n            if (_.includes(SUPPORT_REQ_BODY, method)) {\n              data = requestBody;\n            }\n\n            transformRequest = [function (data) {\n              if (_.isObject(data)) {\n                return JSON.stringify(data);\n              } else if (_.isString(data) || isFormData(data)) {\n                return data;\n              }\n\n              throw 'Request body must belong with [String, Object, FormData]';\n            }];\n            transformResponse = [function (response) {\n              return response;\n            }];\n            response = {};\n            _context7.prev = 7;\n            _context7.next = 10;\n            return axios.request(url, {\n              method: method,\n              params: params,\n              headers: headers || {},\n              data: data || {},\n              transformRequest: transformRequest,\n              transformResponse: transformResponse\n            });\n\n          case 10:\n            response = _context7.sent;\n            _context7.next = 16;\n            break;\n\n          case 13:\n            _context7.prev = 13;\n            _context7.t0 = _context7[\"catch\"](7);\n\n            if (!_.isNil(_context7.t0.message) && _context7.t0.message === 'Network Error') {\n              response = {\n                status: 0\n              };\n            } else if (!_.isNil(_context7.t0.response)) {\n              response = _context7.t0.response;\n            } else {\n              response = {};\n            }\n\n          case 16:\n            return _context7.abrupt(\"return\", readRestResponse(response));\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[7, 13]]);\n  }));\n\n  return function _request(_x8, _x9, _x10, _x11, _x12, _x13) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar toObject = function toObject(urlParams) {\n  if (urlParams instanceof URLSearchParams) {\n    var result = {};\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = urlParams.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var pair = _step.value;\n        result[pair[0]] = pair[1];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return {};\n};\n\nvar isFormData = function isFormData(val) {\n  return typeof FormData !== 'undefined' && val instanceof FormData;\n};\n\nvar readRestResponse = function readRestResponse(resp) {\n  if (_.isNil(resp) || !_.isNumber(resp.status)) return {\n    success: false,\n    data: null,\n    message: 'http_client.errors.4xx'\n  };\n\n  switch (resp.status) {\n    case 0:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.000'\n      };\n\n    case 200:\n      return resp.data;\n\n    case 304:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.304',\n        http_status: 304\n      };\n\n    case 401:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.401',\n        http_status: 401\n      };\n\n    case 403:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.403',\n        http_status: 403\n      };\n\n    case 404:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.404',\n        http_status: 404\n      };\n\n    case 415:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.415',\n        http_status: 415\n      };\n\n    case 500:\n      return {\n        success: false,\n        data: null,\n        message: 'http_client.errors.500',\n        http_status: 500\n      };\n\n    default:\n      return processUnknowCode(resp.status);\n  }\n};\n\nvar processUnknowCode = function processUnknowCode(code) {\n  if (100 <= code && code < 200) {\n    return {\n      success: false,\n      message: 'http_client.errors.1xx',\n      http_status: code\n    };\n  } else if (200 <= code && code < 300) {\n    return {\n      success: false,\n      message: 'http_client.errors.2xx',\n      http_status: code\n    };\n  } else if (300 <= code && code < 400) {\n    return {\n      success: false,\n      message: 'http_client.errors.3xx',\n      http_status: code\n    };\n  } else if (400 <= code && code < 500) {\n    return {\n      success: false,\n      message: 'http_client.errors.4xx',\n      http_status: code\n    };\n  } else if (500 <= code && code < 600) {\n    return {\n      success: false,\n      message: 'http_client.errors.5xx',\n      http_status: code\n    };\n  }\n};\n\nexport var readRequestParams = function readRequestParams(params) {\n  if (_.isNil(params)) return {};\n\n  if (_.startsWith(params, 'http://') || _.startsWith(params, 'https://')) {\n    var url = URL(params);\n    return toObject(new URLSearchParams(url.search));\n  }\n\n  if (_.isString(params)) {\n    return toObject(new URLSearchParams(params));\n  }\n\n  return {};\n};",{"version":3,"sources":["D:\\Project_Mirea\\risk-box\\front-end\\src\\core\\http-client.js"],"names":["_","REQUEST_HEADER_AUTH","REQUEST_METHOD","GET","POST","PUT","DELETE","HTTPClient","axios","isObject","isEmpty","axiosInstance","cloneDeep","access_token","isString","trim","defaults","headers","common","omit","url","requestParams","request","requestBody","method","includes","keys","SUPPORT_REQ_BODY","params","URLSearchParams","data","transformRequest","JSON","stringify","isFormData","transformResponse","response","isNil","message","status","readRestResponse","toObject","urlParams","result","entries","pair","val","FormData","resp","isNumber","success","http_status","processUnknowCode","code","readRequestParams","startsWith","URL","search"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport { REQUEST_HEADER_AUTH } from './constant';\r\n\r\nexport const REQUEST_METHOD = {\r\n  GET: 'GET',\r\n  POST: 'POST',\r\n  PUT: 'PUT',\r\n  DELETE: 'DELETE'\r\n};\r\n\r\nexport class HTTPClient {\r\n  constructor(axios) {\r\n    if (!_.isObject(axios) && _.isEmpty(axios)) {\r\n      throw 'Please provide correct AXIOS instance.';\r\n    }\r\n    this.axiosInstance = _.cloneDeep(axios);\r\n  }\r\n\r\n  setAccessToken(access_token) {\r\n    if (_.isString(access_token) && _.trim(access_token) != '') {\r\n      this.axiosInstance.defaults.headers.common[\r\n        REQUEST_HEADER_AUTH\r\n      ] = `${access_token}`;\r\n    } else {\r\n      _.omit(this.axiosInstance.defaults.headers.common, [REQUEST_HEADER_AUTH]);\r\n    }\r\n  }\r\n\r\n  async get(url, requestParams = {}, headers = {}) {\r\n    if (!_.isString(url)) throw 'String value of URL must correct';\r\n    return await request(\r\n      this.axiosInstance,\r\n      url,\r\n      REQUEST_METHOD.GET,\r\n      headers,\r\n      requestParams,\r\n      {}\r\n    );\r\n  }\r\n\r\n  async post(url, requestBody = {}, headers = {}) {\r\n    if (!_.isString(url)) throw 'String value of URL must correct';\r\n    return await request(\r\n      this.axiosInstance,\r\n      url,\r\n      REQUEST_METHOD.POST,\r\n      headers,\r\n      {},\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  async put(url, requestBody = {}, headers = {}) {\r\n    if (!_.isString(url)) throw 'String value of URL must correct';\r\n    return await request(\r\n      this.axiosInstance,\r\n      url,\r\n      REQUEST_METHOD.PUT,\r\n      headers,\r\n      {},\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  async delete(url, requestParams = {}, headers = {}) {\r\n    if (!_.isString(url)) throw 'String value of URL must correct';\r\n    return await request(\r\n      this.axiosInstance,\r\n      url,\r\n      REQUEST_METHOD.DELETE,\r\n      headers,\r\n      requestParams,\r\n      {}\r\n    );\r\n  }\r\n\r\n  async upload(url, requestBody = {}, headers = {}) {\r\n    if (!_.isString(url)) throw 'String value of URL must correct';\r\n    headers['Content-Type'] = 'multipart/form-data';\r\n    return await request(\r\n      this.axiosInstance,\r\n      url,\r\n      REQUEST_METHOD.POST,\r\n      headers,\r\n      {},\r\n      requestBody\r\n    );\r\n  }\r\n\r\n  async request(\r\n    url,\r\n    method,\r\n    headers = {},\r\n    requestParams = {},\r\n    requestBody = {}\r\n  ) {\r\n    if (!_.includes(_.keys(REQUEST_METHOD), method) || !_.isString(url)) {\r\n      throw 'HTTPClient only support [GET, POST, PUT, DELETE]';\r\n    }\r\n    return await request(\r\n      this.axiosInstance,\r\n      url,\r\n      method,\r\n      headers,\r\n      requestParams,\r\n      requestBody\r\n    );\r\n  }\r\n}\r\n\r\nconst SUPPORT_REQ_BODY = [REQUEST_METHOD.POST, REQUEST_METHOD.PUT];\r\n\r\nconst request = async (\r\n  axios,\r\n  url,\r\n  method,\r\n  headers,\r\n  requestParams,\r\n  requestBody\r\n) => {\r\n  let params = {};\r\n  if (!_.isEmpty(requestParams)) {\r\n    params = new URLSearchParams(requestParams);\r\n  }\r\n\r\n  let data = {};\r\n  if (_.includes(SUPPORT_REQ_BODY, method)) {\r\n    data = requestBody;\r\n  }\r\n\r\n  let transformRequest = [\r\n    data => {\r\n      if (_.isObject(data)) {\r\n        return JSON.stringify(data);\r\n      } else if (_.isString(data) || isFormData(data)) {\r\n        return data;\r\n      }\r\n      throw 'Request body must belong with [String, Object, FormData]';\r\n    }\r\n  ];\r\n\r\n  let transformResponse = [\r\n    response => {\r\n      return response;\r\n    }\r\n  ];\r\n  var response = {};\r\n  try {\r\n    response = await axios.request(url, {\r\n      method,\r\n      params,\r\n      headers: headers || {},\r\n      data: data || {},\r\n      transformRequest,\r\n      transformResponse\r\n    });\r\n  } catch (error) {\r\n    if (!_.isNil(error.message) && error.message === 'Network Error') {\r\n      response = { status: 0 };\r\n    } else if (!_.isNil(error.response)) {\r\n      response = error.response;\r\n    } else {\r\n      response = {};\r\n    }\r\n  }\r\n\r\n  return readRestResponse(response);\r\n};\r\n\r\nconst toObject = urlParams => {\r\n  if (urlParams instanceof URLSearchParams) {\r\n    let result = {};\r\n    for (let pair of urlParams.entries()) {\r\n      result[pair[0]] = pair[1];\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nconst isFormData = val => {\r\n  return typeof FormData !== 'undefined' && val instanceof FormData;\r\n};\r\n\r\nconst readRestResponse = resp => {\r\n  if (_.isNil(resp) || !_.isNumber(resp.status))\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      message: 'http_client.errors.4xx'\r\n    };\r\n\r\n  switch (resp.status) {\r\n    case 0:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.000'\r\n      };\r\n\r\n    case 200:\r\n      return resp.data;\r\n\r\n    case 304:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.304',\r\n        http_status: 304\r\n      };\r\n\r\n    case 401:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.401',\r\n        http_status: 401\r\n      };\r\n\r\n    case 403:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.403',\r\n        http_status: 403\r\n      };\r\n\r\n    case 404:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.404',\r\n        http_status: 404\r\n      };\r\n\r\n    case 415:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.415',\r\n        http_status: 415\r\n      };\r\n\r\n    case 500:\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        message: 'http_client.errors.500',\r\n        http_status: 500\r\n      };\r\n\r\n    default:\r\n      return processUnknowCode(resp.status);\r\n  }\r\n};\r\n\r\nconst processUnknowCode = code => {\r\n  if (100 <= code && code < 200) {\r\n    return {\r\n      success: false,\r\n      message: 'http_client.errors.1xx',\r\n      http_status: code\r\n    };\r\n  } else if (200 <= code && code < 300) {\r\n    return {\r\n      success: false,\r\n      message: 'http_client.errors.2xx',\r\n      http_status: code\r\n    };\r\n  } else if (300 <= code && code < 400) {\r\n    return {\r\n      success: false,\r\n      message: 'http_client.errors.3xx',\r\n      http_status: code\r\n    };\r\n  } else if (400 <= code && code < 500) {\r\n    return {\r\n      success: false,\r\n      message: 'http_client.errors.4xx',\r\n      http_status: code\r\n    };\r\n  } else if (500 <= code && code < 600) {\r\n    return {\r\n      success: false,\r\n      message: 'http_client.errors.5xx',\r\n      http_status: code\r\n    };\r\n  }\r\n};\r\n\r\nexport const readRequestParams = params => {\r\n  if (_.isNil(params)) return {};\r\n\r\n  if (_.startsWith(params, 'http://') || _.startsWith(params, 'https://')) {\r\n    let url = URL(params);\r\n    return toObject(new URLSearchParams(url.search));\r\n  }\r\n\r\n  if (_.isString(params)) {\r\n    return toObject(new URLSearchParams(params));\r\n  }\r\n\r\n  return {};\r\n};\r\n"]}]}