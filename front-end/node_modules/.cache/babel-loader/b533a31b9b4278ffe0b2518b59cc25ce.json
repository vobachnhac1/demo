{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project_Mirea\\risk-box\\front-end\\src\\store\\global\\actions.js","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\store\\global\\actions.js","mtime":1556591576365},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556556014088}],"contextDependencies":[],"result":["import { TOGGLE_APP_DRAWER, SET_APPLICATION_LOADING, SET_FEATURE_LOADING, CLEAR_MESSAGE, ADD_SUCCESS_MSG, ADD_ERROR_MSG, ADD_WARNING_MSG } from \"./types\";\nimport store from 'store';\nimport { Checker } from 'utilities';\nexport var toggleDrawer = function toggleDrawer(_ref, flag) {\n  var commit = _ref.commit;\n\n  if (!Checker.isUndefined(flag) && Checker.isBoolean(flag)) {\n    commit(TOGGLE_APP_DRAWER, flag);\n  } else {\n    var status = store.getters['global/drawerToggled'];\n    commit(TOGGLE_APP_DRAWER, !status);\n  }\n};\nexport var setAppLoading = function setAppLoading(_ref2) {\n  var commit = _ref2.commit;\n  var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  commit(SET_APPLICATION_LOADING, flag);\n};\nexport var setFeatureLoading = function setFeatureLoading(_ref3) {\n  var commit = _ref3.commit;\n  var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  commit(SET_FEATURE_LOADING, flag);\n};\nexport var showSuccessMsg = function showSuccessMsg(_ref4, msg) {\n  var commit = _ref4.commit;\n  commit(ADD_SUCCESS_MSG, msg);\n};\nexport var showErrorMsg = function showErrorMsg(_ref5, msg) {\n  var commit = _ref5.commit;\n  commit(ADD_ERROR_MSG, msg);\n};\nexport var showWarningMsg = function showWarningMsg(_ref6, msg) {\n  var commit = _ref6.commit;\n  commit(ADD_WARNING_MSG, msg);\n};\nexport var resetNotify = function resetNotify(_ref7, code) {\n  var commit = _ref7.commit;\n  commit(CLEAR_MESSAGE, code);\n};",{"version":3,"sources":["D:\\Project_Mirea\\risk-box\\front-end\\src\\store\\global\\actions.js"],"names":["TOGGLE_APP_DRAWER","SET_APPLICATION_LOADING","SET_FEATURE_LOADING","CLEAR_MESSAGE","ADD_SUCCESS_MSG","ADD_ERROR_MSG","ADD_WARNING_MSG","store","Checker","toggleDrawer","flag","commit","isUndefined","isBoolean","status","getters","setAppLoading","setFeatureLoading","showSuccessMsg","msg","showErrorMsg","showWarningMsg","resetNotify","code"],"mappings":"AAAA,SACEA,iBADF,EAEEC,uBAFF,EAGEC,mBAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,aANF,EAOEC,eAPF;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAaC,IAAb,EAAsB;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;;AAChD,MAAI,CAACH,OAAO,CAACI,WAAR,CAAoBF,IAApB,CAAD,IAA8BF,OAAO,CAACK,SAAR,CAAkBH,IAAlB,CAAlC,EAA2D;AACzDC,IAAAA,MAAM,CAACX,iBAAD,EAAoBU,IAApB,CAAN;AACD,GAFD,MAEO;AACL,QAAII,MAAM,GAAGP,KAAK,CAACQ,OAAN,CAAc,sBAAd,CAAb;AACAJ,IAAAA,MAAM,CAACX,iBAAD,EAAoB,CAACc,MAArB,CAAN;AACD;AACF,CAPM;AASP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,QAA8B;AAAA,MAA3BL,MAA2B,SAA3BA,MAA2B;AAAA,MAAjBD,IAAiB,uEAAV,KAAU;AACzDC,EAAAA,MAAM,CAACV,uBAAD,EAA0BS,IAA1B,CAAN;AACD,CAFM;AAIP,OAAO,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,QAA8B;AAAA,MAA3BN,MAA2B,SAA3BA,MAA2B;AAAA,MAAjBD,IAAiB,uEAAV,KAAU;AAC7DC,EAAAA,MAAM,CAACT,mBAAD,EAAsBQ,IAAtB,CAAN;AACD,CAFM;AAIP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,QAAaC,GAAb,EAAqB;AAAA,MAAlBR,MAAkB,SAAlBA,MAAkB;AACjDA,EAAAA,MAAM,CAACP,eAAD,EAAkBe,GAAlB,CAAN;AACD,CAFM;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,QAAaD,GAAb,EAAqB;AAAA,MAAlBR,MAAkB,SAAlBA,MAAkB;AAC/CA,EAAAA,MAAM,CAACN,aAAD,EAAgBc,GAAhB,CAAN;AACD,CAFM;AAIP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,QAAaF,GAAb,EAAqB;AAAA,MAAlBR,MAAkB,SAAlBA,MAAkB;AACjDA,EAAAA,MAAM,CAACL,eAAD,EAAkBa,GAAlB,CAAN;AACD,CAFM;AAIP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,QAAaC,IAAb,EAAsB;AAAA,MAAnBZ,MAAmB,SAAnBA,MAAmB;AAC/CA,EAAAA,MAAM,CAACR,aAAD,EAAgBoB,IAAhB,CAAN;AACD,CAFM","sourcesContent":["import {\r\n  TOGGLE_APP_DRAWER,\r\n  SET_APPLICATION_LOADING,\r\n  SET_FEATURE_LOADING,\r\n  CLEAR_MESSAGE,\r\n  ADD_SUCCESS_MSG,\r\n  ADD_ERROR_MSG,\r\n  ADD_WARNING_MSG\r\n} from './types';\r\nimport store from 'store';\r\nimport { Checker } from 'utilities';\r\n\r\nexport const toggleDrawer = ({ commit }, flag) => {\r\n  if (!Checker.isUndefined(flag) && Checker.isBoolean(flag)) {\r\n    commit(TOGGLE_APP_DRAWER, flag);\r\n  } else {\r\n    let status = store.getters['global/drawerToggled'];\r\n    commit(TOGGLE_APP_DRAWER, !status);\r\n  }\r\n};\r\n\r\nexport const setAppLoading = ({ commit }, flag = false) => {\r\n  commit(SET_APPLICATION_LOADING, flag);\r\n};\r\n\r\nexport const setFeatureLoading = ({ commit }, flag = false) => {\r\n  commit(SET_FEATURE_LOADING, flag);\r\n};\r\n\r\nexport const showSuccessMsg = ({ commit }, msg) => {\r\n  commit(ADD_SUCCESS_MSG, msg);\r\n};\r\n\r\nexport const showErrorMsg = ({ commit }, msg) => {\r\n  commit(ADD_ERROR_MSG, msg);\r\n};\r\n\r\nexport const showWarningMsg = ({ commit }, msg) => {\r\n  commit(ADD_WARNING_MSG, msg);\r\n};\r\n\r\nexport const resetNotify = ({ commit }, code) => {\r\n  commit(CLEAR_MESSAGE, code);\r\n};\r\n"]}]}