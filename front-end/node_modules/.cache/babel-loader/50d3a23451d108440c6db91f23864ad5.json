{"remainingRequest":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\demo\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\demo\\front-end\\src\\components\\commons\\notify-snackbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\demo\\front-end\\src\\components\\commons\\notify-snackbar.vue","mtime":1556937921672},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556937905542},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1556937918662}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\demo\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      options: {\n        timeout: 5000,\n        top: false,\n        bottom: true,\n        left: false,\n        right: true,\n        'multi-line': true,\n        dark: true\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters('global', ['notifications'])),\n  methods: _objectSpread({}, mapActions('global', ['resetNotify']), {\n    changeStateSnackBar: function changeStateSnackBar(code, value) {\n      if (!value) {\n        this.resetNotify(code);\n      }\n    }\n  })\n};",{"version":3,"sources":["notify-snackbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA,IADA;AAGA,QAAA,GAAA,EAAA,KAHA;AAIA,QAAA,MAAA,EAAA,IAJA;AAKA,QAAA,IAAA,EAAA,KALA;AAMA,QAAA,KAAA,EAAA,IANA;AAQA,sBAAA,IARA;AAUA,QAAA,IAAA,EAAA;AAVA;AADA,KAAA;AAcA,GAhBA;AAkBA,EAAA,QAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CAAA,eAAA,CAAA,CADA,CAlBA;AAsBA,EAAA,OAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CAAA,aAAA,CAAA,CADA;AAGA,IAAA,mBAHA,+BAGA,IAHA,EAGA,KAHA,EAGA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,aAAA,WAAA,CAAA,IAAA;AACA;AACA;AAPA;AAtBA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <template v-for=\"(notify, index) in notifications\">\r\n      <v-snackbar\r\n        :key=\"notify.code\"\r\n        :value=\"notify.show\"\r\n        :class=\"'pos-' + index\"\r\n        :color=\"notify.color\"\r\n        v-bind=\"options\"\r\n        @input=\"changeStateSnackBar(notify.code, $event)\"\r\n      >\r\n        <div style=\"margin-right: 15px\">{{ notify.message }}</div>\r\n        <v-icon dark @click=\"resetNotify(notify.code)\">{{\r\n          $vuetify.icons.CLOSE\r\n        }}</v-icon>\r\n      </v-snackbar>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      options: {\r\n        timeout: 5000,\r\n\r\n        top: false,\r\n        bottom: true,\r\n        left: false,\r\n        right: true,\r\n\r\n        'multi-line': true,\r\n\r\n        dark: true\r\n      }\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters('global', ['notifications'])\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions('global', ['resetNotify']),\r\n\r\n    changeStateSnackBar(code, value) {\r\n      if (!value) {\r\n        this.resetNotify(code);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.pos-1 {\r\n  bottom: 90px;\r\n}\r\n\r\n.pos-2 {\r\n  bottom: 180px;\r\n}\r\n\r\n.pos-3 {\r\n  bottom: 270px;\r\n}\r\n\r\n.pos-4 {\r\n  bottom: 360px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/commons"}]}