{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\alert.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\alert.vue","mtime":1556591576350},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1556556019204}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Checker } from 'utilities';\nimport { APPEVENT_ALERT_INFO, APPEVENT_ALERT_WARN, APPEVENT_ALERT_ERROR } from 'core/app-events';\nexport default {\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      show: false,\n      message: '',\n      icon: '',\n      color: '',\n      btns: [],\n      event_data: {\n        title: 'global.alert.title'\n      }\n    }, _defineProperty(_ref, APPEVENT_ALERT_INFO, {\n      icon: this.$vuetify.icons.INFO,\n      color: this.$vuetify.theme.success\n    }), _defineProperty(_ref, APPEVENT_ALERT_WARN, {\n      icon: this.$vuetify.icons.WARN,\n      color: this.$vuetify.theme.warning\n    }), _defineProperty(_ref, APPEVENT_ALERT_ERROR, {\n      icon: this.$vuetify.icons.ERROR,\n      color: this.$vuetify.theme.error\n    }), _defineProperty(_ref, \"ALL_EVENTS\", [APPEVENT_ALERT_INFO, APPEVENT_ALERT_WARN, APPEVENT_ALERT_ERROR]), _defineProperty(_ref, \"BTN_STYLE\", {\n      NORMAL: 'NORMAL',\n      OUTLINE: 'OUTLINE',\n      NONE: 'NONE'\n    }), _ref;\n  },\n  created: function created() {\n    this.listenEvent();\n  },\n  methods: {\n    listenEvent: function listenEvent() {\n      var _this = this;\n\n      this.$bus.$on(this.ALL_EVENTS, function (data) {\n        if (!_this.show) {\n          Object.assign(_this, _this[data.event_code]);\n          _this.message = '';\n          _this.btns = [];\n\n          _this.showAlert(data);\n        }\n      });\n    },\n    showAlert: function showAlert(event_data) {\n      this.show = true;\n      this.event_data = event_data;\n\n      if (Checker.isFunction(event_data.message)) {\n        this.message = event_data.message();\n      } else {\n        this.message = event_data.message;\n      }\n\n      if (event_data.controls != null) {\n        for (var btn in event_data.controls) {\n          var btn_config = event_data.controls[btn];\n\n          if (Checker.hasText(btn_config)) {\n            this.btns.push({\n              code: btn,\n              text: btn_config\n            });\n          } else if (Checker.isObject(btn_config)) {\n            this.btns.push({\n              code: btn,\n              text: btn_config.text,\n              color: btn_config.color || this.color,\n              style: this.chooseBtnStyle(btn_config.style),\n              dark: btn_config.dark || false\n            });\n          }\n        }\n      }\n\n      this.optionsHandler(event_data);\n    },\n    chooseBtnStyle: function chooseBtnStyle(style) {\n      if (Checker.hasText(style) && Object.keys(this.BTN_STYLE).includes(style.toUpperCase())) {\n        return style.toUpperCase();\n      }\n\n      return this.BTN_STYLE.NONE;\n    },\n    optionsHandler: function optionsHandler(event_data) {\n      var _this2 = this;\n\n      if (Checker.isBoolean(event_data.options.INTERVAL_UPDATE_MESSAGE) && event_data.options.INTERVAL_UPDATE_MESSAGE) {\n        if (Checker.isFunction(event_data.message)) {\n          var updateMessage = setInterval(function () {\n            var result = event_data.message();\n\n            if (Checker.isString(result)) {\n              _this2.message = result;\n            } else {\n              clearInterval(updateMessage);\n            }\n          }, event_data.options.INTERVAL_TIME_UPDATE_MESSAGE);\n        }\n      }\n    },\n    response: function response(code) {\n      var clone_data = Object.assign({}, this.event_data);\n      this.show = false;\n\n      if (clone_data.callback != null) {\n        clone_data.callback(code, clone_data.data);\n      }\n    }\n  }\n};",{"version":3,"sources":["alert.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-dialog v-model=\"show\" width=\"500\" v-bind=\"{ persistent: btns.length > 0 }\">\r\n    <v-container fluid text-md-center grid-list-md class=\"no_padding\">\r\n      <v-card>\r\n        <v-card-text class=\"alert_title\" :style=\"{ color: color }\">\r\n          <v-icon :color=\"color\" medium>{{ icon }}</v-icon>\r\n          {{ $t(event_data.title) }}\r\n        </v-card-text>\r\n        <v-card-text>\r\n          <v-flex class=\"text_message\" md10 v-html=\"$t(message)\" />\r\n        </v-card-text>\r\n        <v-card-text class=\"no_padding control_side\">\r\n          <v-layout justify-end>\r\n            <template v-for=\"item in btns\">\r\n              <v-btn\r\n                :key=\"item.code\"\r\n                :color=\"item.color || color\"\r\n                :class=\"{\r\n                  control_btn: true,\r\n                  'white--text': item.dark || false\r\n                }\"\r\n                v-bind=\"{\r\n                  flat: item.style == undefined || item.style == BTN_STYLE.NONE,\r\n                  outline: item.style == BTN_STYLE.OUTLINE\r\n                }\"\r\n                small\r\n                @click=\"response(item.code)\"\r\n              >\r\n                {{ $t(item.text) }}\r\n              </v-btn>\r\n            </template>\r\n          </v-layout>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-container>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { Checker } from 'utilities';\r\nimport {\r\n  APPEVENT_ALERT_INFO,\r\n  APPEVENT_ALERT_WARN,\r\n  APPEVENT_ALERT_ERROR\r\n} from 'core/app-events';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      show: false,\r\n      message: '',\r\n      icon: '',\r\n      color: '',\r\n\r\n      btns: [],\r\n\r\n      event_data: {\r\n        title: 'global.alert.title'\r\n      },\r\n\r\n      [APPEVENT_ALERT_INFO]: {\r\n        icon: this.$vuetify.icons.INFO,\r\n        color: this.$vuetify.theme.success\r\n      },\r\n\r\n      [APPEVENT_ALERT_WARN]: {\r\n        icon: this.$vuetify.icons.WARN,\r\n        color: this.$vuetify.theme.warning\r\n      },\r\n\r\n      [APPEVENT_ALERT_ERROR]: {\r\n        icon: this.$vuetify.icons.ERROR,\r\n        color: this.$vuetify.theme.error\r\n      },\r\n\r\n      ALL_EVENTS: [\r\n        APPEVENT_ALERT_INFO,\r\n        APPEVENT_ALERT_WARN,\r\n        APPEVENT_ALERT_ERROR\r\n      ],\r\n\r\n      BTN_STYLE: {\r\n        NORMAL: 'NORMAL',\r\n        OUTLINE: 'OUTLINE',\r\n        NONE: 'NONE'\r\n      }\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.listenEvent();\r\n  },\r\n\r\n  methods: {\r\n    listenEvent() {\r\n      this.$bus.$on(this.ALL_EVENTS, data => {\r\n        if (!this.show) {\r\n          Object.assign(this, this[data.event_code]);\r\n          this.message = '';\r\n          this.btns = [];\r\n\r\n          this.showAlert(data);\r\n        }\r\n      });\r\n    },\r\n\r\n    showAlert(event_data) {\r\n      this.show = true;\r\n      this.event_data = event_data;\r\n\r\n      if (Checker.isFunction(event_data.message)) {\r\n        this.message = event_data.message();\r\n      } else {\r\n        this.message = event_data.message;\r\n      }\r\n\r\n      if (event_data.controls != null) {\r\n        for (let btn in event_data.controls) {\r\n          let btn_config = event_data.controls[btn];\r\n          if (Checker.hasText(btn_config)) {\r\n            this.btns.push({\r\n              code: btn,\r\n              text: btn_config\r\n            });\r\n          } else if (Checker.isObject(btn_config)) {\r\n            this.btns.push({\r\n              code: btn,\r\n              text: btn_config.text,\r\n              color: btn_config.color || this.color,\r\n              style: this.chooseBtnStyle(btn_config.style),\r\n              dark: btn_config.dark || false\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      this.optionsHandler(event_data);\r\n    },\r\n\r\n    chooseBtnStyle(style) {\r\n      if (\r\n        Checker.hasText(style) &&\r\n        Object.keys(this.BTN_STYLE).includes(style.toUpperCase())\r\n      ) {\r\n        return style.toUpperCase();\r\n      }\r\n      return this.BTN_STYLE.NONE;\r\n    },\r\n\r\n    optionsHandler(event_data) {\r\n      if (\r\n        Checker.isBoolean(event_data.options.INTERVAL_UPDATE_MESSAGE) &&\r\n        event_data.options.INTERVAL_UPDATE_MESSAGE\r\n      ) {\r\n        if (Checker.isFunction(event_data.message)) {\r\n          var updateMessage = setInterval(() => {\r\n            let result = event_data.message();\r\n            if (Checker.isString(result)) {\r\n              this.message = result;\r\n            } else {\r\n              clearInterval(updateMessage);\r\n            }\r\n          }, event_data.options.INTERVAL_TIME_UPDATE_MESSAGE);\r\n        }\r\n      }\r\n    },\r\n\r\n    response(code) {\r\n      let clone_data = Object.assign({}, this.event_data);\r\n      this.show = false;\r\n\r\n      if (clone_data.callback != null) {\r\n        clone_data.callback(code, clone_data.data);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.alert_title {\r\n  text-align: left;\r\n  color: #444;\r\n  font-size: 22px;\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n.text_message {\r\n  line-height: 40px !important;\r\n  color: #999;\r\n  text-align: left;\r\n  font-size: 18px;\r\n}\r\n\r\n.control_side {\r\n  width: calc(100% - 32px);\r\n  margin: 0 16px;\r\n  padding: 7px 0 !important;\r\n}\r\n\r\n.control_btn {\r\n  margin: 7px 0 7px 10px !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/commons"}]}