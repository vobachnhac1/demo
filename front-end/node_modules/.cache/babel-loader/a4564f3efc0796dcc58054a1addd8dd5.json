{"remainingRequest":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\demo\\front-end\\src\\core\\filters.js","dependencies":[{"path":"D:\\demo\\front-end\\src\\core\\filters.js","mtime":1556937921704},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556937905542},{"path":"D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556937903935}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport moment from 'moment';\nvar filters = {\n  prettyJSON: function prettyJSON(json) {\n    if (json) {\n      json = JSON.stringify(json, undefined, 4);\n      json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      return json.replace(new RegExp(\"(\\\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\\\"])*\\\"(\\\\s*:)?|\\\\b(true|false|null)\\\\b|-?\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d+)?)\", 'g'), function (match) {\n        var cls = 'number';\n\n        if (/^\"/.test(match)) {\n          if (/:$/.test(match)) {\n            cls = 'key';\n          } else {\n            cls = 'string';\n          }\n        } else if (/true|false/.test(match)) {\n          cls = 'boolean';\n        } else if (/null/.test(match)) {\n          cls = 'null';\n        }\n\n        return '<span class=\"' + cls + '\">' + match + '</span>';\n      });\n    }\n  },\n  ago: function ago(time) {\n    return moment(time).fromNow();\n  },\n  truncate: function truncate(text, length) {\n    if (text && text.length > length) {\n      return text.substr(0, length - 1) + '…';\n    }\n\n    return text;\n  }\n};\nexport default {\n  filters: filters,\n  install: function install(Vue) {\n    var keys = Object.keys(filters);\n    keys.forEach(function (name) {\n      return Vue.filter(name, filters[name]);\n    });\n  }\n};",{"version":3,"sources":["D:\\demo\\front-end\\src\\core\\filters.js"],"names":["moment","filters","prettyJSON","json","JSON","stringify","undefined","replace","RegExp","match","cls","test","ago","time","fromNow","truncate","text","length","substr","install","Vue","keys","Object","forEach","name","filter"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,IAAIC,OAAO,GAAG;AACZC,EAAAA,UADY,sBACDC,IADC,EACK;AACf,QAAIA,IAAJ,EAAU;AACRA,MAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqBG,SAArB,EAAgC,CAAhC,CAAP;AACAH,MAAAA,IAAI,GAAGA,IAAI,CACRI,OADI,CACI,IADJ,EACU,OADV,EAEJA,OAFI,CAEI,IAFJ,EAEU,MAFV,EAGJA,OAHI,CAGI,IAHJ,EAGU,MAHV,CAAP;AAIA,aAAOJ,IAAI,CAACI,OAAL,CACL,IAAIC,MAAJ,CACE,kHADF,EAEE,GAFF,CADK,EAKL,UAASC,KAAT,EAAgB;AACd,YAAIC,GAAG,GAAG,QAAV;;AACA,YAAI,KAAKC,IAAL,CAAUF,KAAV,CAAJ,EAAsB;AACpB,cAAI,KAAKE,IAAL,CAAUF,KAAV,CAAJ,EAAsB;AACpBC,YAAAA,GAAG,GAAG,KAAN;AACD,WAFD,MAEO;AACLA,YAAAA,GAAG,GAAG,QAAN;AACD;AACF,SAND,MAMO,IAAI,aAAaC,IAAb,CAAkBF,KAAlB,CAAJ,EAA8B;AACnCC,UAAAA,GAAG,GAAG,SAAN;AACD,SAFM,MAEA,IAAI,OAAOC,IAAP,CAAYF,KAAZ,CAAJ,EAAwB;AAC7BC,UAAAA,GAAG,GAAG,MAAN;AACD;;AACD,eAAO,kBAAkBA,GAAlB,GAAwB,IAAxB,GAA+BD,KAA/B,GAAuC,SAA9C;AACD,OAnBI,CAAP;AAqBD;AACF,GA9BW;AAgCZG,EAAAA,GAhCY,eAgCRC,IAhCQ,EAgCF;AACR,WAAOb,MAAM,CAACa,IAAD,CAAN,CAAaC,OAAb,EAAP;AACD,GAlCW;AAoCZC,EAAAA,QApCY,oBAoCHC,IApCG,EAoCGC,MApCH,EAoCW;AACrB,QAAID,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAcA,MAA1B,EAAkC;AAChC,aAAOD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeD,MAAM,GAAG,CAAxB,IAA6B,GAApC;AACD;;AACD,WAAOD,IAAP;AACD;AAzCW,CAAd;AA4CA,eAAe;AACbf,EAAAA,OAAO,EAAPA,OADa;AAGbkB,EAAAA,OAHa,mBAGLC,GAHK,EAGA;AACX,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYpB,OAAZ,CAAX;AACAoB,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,IAAI;AAAA,aAAIJ,GAAG,CAACK,MAAJ,CAAWD,IAAX,EAAiBvB,OAAO,CAACuB,IAAD,CAAxB,CAAJ;AAAA,KAAjB;AACD;AANY,CAAf","sourcesContent":["import moment from 'moment';\r\n\r\nlet filters = {\r\n  prettyJSON(json) {\r\n    if (json) {\r\n      json = JSON.stringify(json, undefined, 4);\r\n      json = json\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n      return json.replace(\r\n        new RegExp(\r\n          '(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\\\s*:)?|\\\\b(true|false|null)\\\\b|-?\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d+)?)',\r\n          'g'\r\n        ),\r\n        function(match) {\r\n          let cls = 'number';\r\n          if (/^\"/.test(match)) {\r\n            if (/:$/.test(match)) {\r\n              cls = 'key';\r\n            } else {\r\n              cls = 'string';\r\n            }\r\n          } else if (/true|false/.test(match)) {\r\n            cls = 'boolean';\r\n          } else if (/null/.test(match)) {\r\n            cls = 'null';\r\n          }\r\n          return '<span class=\"' + cls + '\">' + match + '</span>';\r\n        }\r\n      );\r\n    }\r\n  },\r\n\r\n  ago(time) {\r\n    return moment(time).fromNow();\r\n  },\r\n\r\n  truncate(text, length) {\r\n    if (text && text.length > length) {\r\n      return text.substr(0, length - 1) + '…';\r\n    }\r\n    return text;\r\n  }\r\n};\r\n\r\nexport default {\r\n  filters,\r\n\r\n  install(Vue) {\r\n    let keys = Object.keys(filters);\r\n    keys.forEach(name => Vue.filter(name, filters[name]));\r\n  }\r\n};\r\n"]}]}