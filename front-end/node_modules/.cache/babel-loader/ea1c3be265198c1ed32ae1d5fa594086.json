{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\perfect-table\\filter-compare.js","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\perfect-table\\filter-compare.js","mtime":1556591576352},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556556014088}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-nan\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _ from 'lodash';\nimport moment from 'moment';\nimport FILTER_OPERATIONS from \"./filter-operations\";\nvar SUPPORT_DATE_FORMAT = ['YYYY-MM-DD', 'MM/DD/YYYY', 'DD/MM/YYYY h:mm'];\nexport var FILTER_ULTIS = {\n  filter: function filter(condition, record) {\n    var prepare = FILTER_ULTIS.prepare[condition.type];\n    var search = prepare(condition.value);\n    var base = prepare(record[condition.column]);\n\n    if (FILTER_ULTIS.compare[condition.type](base, search, condition.operation)) {\n      condition.results.push(record[condition.key]);\n    }\n  },\n  compare: {\n    STRING: function STRING(base, search, operation) {\n      return operation.exec(base, search);\n    },\n    DATE: function DATE(base, search, operation) {\n      if (base == null || search == null) {\n        return false;\n      }\n\n      return operation.exec(base, search);\n    },\n    NUMBER: function NUMBER(base, search, operation) {\n      var asStringCompare = FILTER_OPERATIONS.STRING[operation.code] !== undefined;\n\n      if (asStringCompare) {\n        return operation.exec(_.toString(base), _.toString(search));\n      } else {\n        if (Number.isNaN(base) || Number.isNaN(search)) {\n          return false;\n        }\n\n        return operation.exec(base, search);\n      }\n    },\n    BOOL: function BOOL(base, search) {\n      return base == search;\n    }\n  },\n  prepare: {\n    STRING: function STRING(val) {\n      return _.toLower(val);\n    },\n    DATE: function DATE(val) {\n      var date = moment(val, SUPPORT_DATE_FORMAT);\n      return date.isValid() ? date : null;\n    },\n    NUMBER: function NUMBER(val) {\n      if (_.isNil(val) || _.trim(val) == '') {\n        return Number.NaN;\n      }\n\n      return Number(val);\n    },\n    BOOL: function BOOL(val) {\n      if (_.isBoolean(val)) {\n        return val;\n      } else if (_.isString(val)) {\n        return val == 'checked';\n      }\n\n      return false;\n    }\n  },\n  ignore: {\n    STRING: function STRING(val) {\n      return val == '' || val == null;\n    },\n    DATE: function DATE(val) {\n      return val == '' || val == null;\n    },\n    NUMBER: function NUMBER(val) {\n      return Number.isNaN(FILTER_ULTIS.prepare.NUMBER(val)) || val == null;\n    },\n    BOOL: function BOOL(val) {\n      return val == '' || val == null;\n    }\n  }\n};",{"version":3,"sources":["D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\perfect-table\\filter-compare.js"],"names":["_","moment","FILTER_OPERATIONS","SUPPORT_DATE_FORMAT","FILTER_ULTIS","filter","condition","record","prepare","type","search","value","base","column","compare","operation","results","push","key","STRING","exec","DATE","NUMBER","asStringCompare","code","undefined","toString","Number","isNaN","BOOL","val","toLower","date","isValid","isNil","trim","NaN","isBoolean","isString","ignore"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport moment from 'moment';\r\nimport FILTER_OPERATIONS from './filter-operations';\r\n\r\nconst SUPPORT_DATE_FORMAT = ['YYYY-MM-DD', 'MM/DD/YYYY', 'DD/MM/YYYY h:mm'];\r\n\r\nexport const FILTER_ULTIS = {\r\n  filter: (condition, record) => {\r\n    let prepare = FILTER_ULTIS.prepare[condition.type];\r\n    let search = prepare(condition.value);\r\n    let base = prepare(record[condition.column]);\r\n    if (\r\n      FILTER_ULTIS.compare[condition.type](base, search, condition.operation)\r\n    ) {\r\n      condition.results.push(record[condition.key]);\r\n    }\r\n  },\r\n\r\n  compare: {\r\n    STRING: (base, search, operation) => {\r\n      return operation.exec(base, search);\r\n    },\r\n\r\n    DATE: (base, search, operation) => {\r\n      if (base == null || search == null) {\r\n        return false;\r\n      }\r\n      return operation.exec(base, search);\r\n    },\r\n\r\n    NUMBER: (base, search, operation) => {\r\n      let asStringCompare =\r\n        FILTER_OPERATIONS.STRING[operation.code] !== undefined;\r\n      if (asStringCompare) {\r\n        return operation.exec(_.toString(base), _.toString(search));\r\n      } else {\r\n        if (Number.isNaN(base) || Number.isNaN(search)) {\r\n          return false;\r\n        }\r\n        return operation.exec(base, search);\r\n      }\r\n    },\r\n\r\n    BOOL: (base, search) => {\r\n      return base == search;\r\n    }\r\n  },\r\n\r\n  prepare: {\r\n    STRING: val => {\r\n      return _.toLower(val);\r\n    },\r\n\r\n    DATE: val => {\r\n      let date = moment(val, SUPPORT_DATE_FORMAT);\r\n      return date.isValid() ? date : null;\r\n    },\r\n\r\n    NUMBER: val => {\r\n      if (_.isNil(val) || _.trim(val) == '') {\r\n        return Number.NaN;\r\n      }\r\n      return Number(val);\r\n    },\r\n\r\n    BOOL: val => {\r\n      if (_.isBoolean(val)) {\r\n        return val;\r\n      } else if (_.isString(val)) {\r\n        return val == 'checked';\r\n      }\r\n      return false;\r\n    }\r\n  },\r\n\r\n  ignore: {\r\n    STRING: val => {\r\n      return val == '' || val == null;\r\n    },\r\n\r\n    DATE: val => {\r\n      return val == '' || val == null;\r\n    },\r\n\r\n    NUMBER: val => {\r\n      return Number.isNaN(FILTER_ULTIS.prepare.NUMBER(val)) || val == null;\r\n    },\r\n\r\n    BOOL: val => {\r\n      return val == '' || val == null;\r\n    }\r\n  }\r\n};\r\n"]}]}