{"remainingRequest":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\demo\\front-end\\src\\store\\global\\index.js","dependencies":[{"path":"D:\\demo\\front-end\\src\\store\\global\\index.js","mtime":1556937921719},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556937905542},{"path":"D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556937903935}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\demo\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\demo\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n\nvar _mutations;\n\nimport { TOGGLE_APP_DRAWER, SET_APPLICATION_LOADING, SET_FEATURE_LOADING, CLEAR_MESSAGE, ADD_SUCCESS_MSG, ADD_ERROR_MSG, ADD_WARNING_MSG } from \"./types\";\nimport * as getters from \"./getters\";\nimport * as actions from \"./actions\";\nvar state = {\n  drawerToggled: true,\n  loading_app: false,\n  loading_feature: false,\n  messagePoll: []\n};\n\nvar showMsg = function showMsg(state, msgInfo) {\n  var snackbar_info = _objectSpread({\n    code: new Date().getTime(),\n    show: true\n  }, msgInfo);\n\n  state.messagePoll.push(snackbar_info);\n\n  if (state.messagePoll.length > 5) {\n    state.messagePoll.shift();\n  }\n};\n\nvar mutations = (_mutations = {}, _defineProperty(_mutations, TOGGLE_APP_DRAWER, function (state, flag) {\n  state.drawerToggled = flag;\n}), _defineProperty(_mutations, SET_FEATURE_LOADING, function (state, flag) {\n  state.loading_feature = flag;\n}), _defineProperty(_mutations, SET_APPLICATION_LOADING, function (state, flag) {\n  state.loading_app = flag;\n}), _defineProperty(_mutations, ADD_SUCCESS_MSG, function (state, message) {\n  showMsg(state, {\n    message: message,\n    color: 'green'\n  });\n}), _defineProperty(_mutations, ADD_ERROR_MSG, function (state, message) {\n  showMsg(state, {\n    message: message,\n    color: 'red'\n  });\n}), _defineProperty(_mutations, ADD_WARNING_MSG, function (state, message) {\n  showMsg(state, {\n    message: message,\n    color: 'orange'\n  });\n}), _defineProperty(_mutations, CLEAR_MESSAGE, function (state, code) {\n  state.messagePoll = state.messagePoll.filter(function (message) {\n    return message.code != code;\n  });\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["D:\\demo\\front-end\\src\\store\\global\\index.js"],"names":["TOGGLE_APP_DRAWER","SET_APPLICATION_LOADING","SET_FEATURE_LOADING","CLEAR_MESSAGE","ADD_SUCCESS_MSG","ADD_ERROR_MSG","ADD_WARNING_MSG","getters","actions","state","drawerToggled","loading_app","loading_feature","messagePoll","showMsg","msgInfo","snackbar_info","code","Date","getTime","show","push","length","shift","mutations","flag","message","color","filter","namespaced"],"mappings":";;;;;AAAA,SACEA,iBADF,EAEEC,uBAFF,EAGEC,mBAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,aANF,EAOEC,eAPF;AASA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,OAAZ;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,aAAa,EAAE,IADH;AAEZC,EAAAA,WAAW,EAAE,KAFD;AAGZC,EAAAA,eAAe,EAAE,KAHL;AAIZC,EAAAA,WAAW,EAAE;AAJD,CAAd;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACL,KAAD,EAAQM,OAAR,EAAoB;AAClC,MAAIC,aAAa;AACfC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADS;AAEfC,IAAAA,IAAI,EAAE;AAFS,KAGZL,OAHY,CAAjB;;AAMAN,EAAAA,KAAK,CAACI,WAAN,CAAkBQ,IAAlB,CAAuBL,aAAvB;;AACA,MAAIP,KAAK,CAACI,WAAN,CAAkBS,MAAlB,GAA2B,CAA/B,EAAkC;AAChCb,IAAAA,KAAK,CAACI,WAAN,CAAkBU,KAAlB;AACD;AACF,CAXD;;AAaA,IAAMC,SAAS,iDACZxB,iBADY,YACOS,KADP,EACcgB,IADd,EACoB;AAC/BhB,EAAAA,KAAK,CAACC,aAAN,GAAsBe,IAAtB;AACD,CAHY,+BAKZvB,mBALY,YAKSO,KALT,EAKgBgB,IALhB,EAKsB;AACjChB,EAAAA,KAAK,CAACG,eAAN,GAAwBa,IAAxB;AACD,CAPY,+BASZxB,uBATY,YASaQ,KATb,EASoBgB,IATpB,EAS0B;AACrChB,EAAAA,KAAK,CAACE,WAAN,GAAoBc,IAApB;AACD,CAXY,+BAaZrB,eAbY,YAaKK,KAbL,EAaYiB,OAbZ,EAaqB;AAChCZ,EAAAA,OAAO,CAACL,KAAD,EAAQ;AAAEiB,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAR,CAAP;AACD,CAfY,+BAiBZtB,aAjBY,YAiBGI,KAjBH,EAiBUiB,OAjBV,EAiBmB;AAC9BZ,EAAAA,OAAO,CAACL,KAAD,EAAQ;AAAEiB,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAR,CAAP;AACD,CAnBY,+BAqBZrB,eArBY,YAqBKG,KArBL,EAqBYiB,OArBZ,EAqBqB;AAChCZ,EAAAA,OAAO,CAACL,KAAD,EAAQ;AAAEiB,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAR,CAAP;AACD,CAvBY,+BAyBZxB,aAzBY,YAyBGM,KAzBH,EAyBUQ,IAzBV,EAyBgB;AAC3BR,EAAAA,KAAK,CAACI,WAAN,GAAoBJ,KAAK,CAACI,WAAN,CAAkBe,MAAlB,CAClB,UAAAF,OAAO;AAAA,WAAIA,OAAO,CAACT,IAAR,IAAgBA,IAApB;AAAA,GADW,CAApB;AAGD,CA7BY,cAAf;AAgCA,eAAe;AACbY,EAAAA,UAAU,EAAE,IADC;AAEbpB,EAAAA,KAAK,EAALA,KAFa;AAGbF,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA,OAJa;AAKbgB,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import {\r\n  TOGGLE_APP_DRAWER,\r\n  SET_APPLICATION_LOADING,\r\n  SET_FEATURE_LOADING,\r\n  CLEAR_MESSAGE,\r\n  ADD_SUCCESS_MSG,\r\n  ADD_ERROR_MSG,\r\n  ADD_WARNING_MSG\r\n} from './types';\r\nimport * as getters from './getters';\r\nimport * as actions from './actions';\r\n\r\nconst state = {\r\n  drawerToggled: true,\r\n  loading_app: false,\r\n  loading_feature: false,\r\n  messagePoll: []\r\n};\r\n\r\nconst showMsg = (state, msgInfo) => {\r\n  let snackbar_info = {\r\n    code: new Date().getTime(),\r\n    show: true,\r\n    ...msgInfo\r\n  };\r\n\r\n  state.messagePoll.push(snackbar_info);\r\n  if (state.messagePoll.length > 5) {\r\n    state.messagePoll.shift();\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  [TOGGLE_APP_DRAWER](state, flag) {\r\n    state.drawerToggled = flag;\r\n  },\r\n\r\n  [SET_FEATURE_LOADING](state, flag) {\r\n    state.loading_feature = flag;\r\n  },\r\n\r\n  [SET_APPLICATION_LOADING](state, flag) {\r\n    state.loading_app = flag;\r\n  },\r\n\r\n  [ADD_SUCCESS_MSG](state, message) {\r\n    showMsg(state, { message, color: 'green' });\r\n  },\r\n\r\n  [ADD_ERROR_MSG](state, message) {\r\n    showMsg(state, { message, color: 'red' });\r\n  },\r\n\r\n  [ADD_WARNING_MSG](state, message) {\r\n    showMsg(state, { message, color: 'orange' });\r\n  },\r\n\r\n  [CLEAR_MESSAGE](state, code) {\r\n    state.messagePoll = state.messagePoll.filter(\r\n      message => message.code != code\r\n    );\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}