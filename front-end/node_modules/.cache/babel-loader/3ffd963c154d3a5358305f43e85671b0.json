{"remainingRequest":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\demo\\front-end\\src\\components\\commons\\perfect-table\\filter-operations.js","dependencies":[{"path":"D:\\demo\\front-end\\src\\components\\commons\\perfect-table\\filter-operations.js","mtime":1556937921688},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556937905542},{"path":"D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556937903935}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.ends-with\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _ from 'lodash';\nvar FILTER_OPERATIONS = {\n  STRING: {\n    START_WITH: {\n      code: 'START_WITH',\n      text: 'Start with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return _.startsWith(before, after);\n      }\n    },\n    NOT_START_WITH: {\n      code: 'NOT_START_WITH',\n      text: 'Not start with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return !_.startsWith(before, after);\n      }\n    },\n    END_WITH: {\n      code: 'END_WITH',\n      text: 'End with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return _.endsWith(before, after);\n      }\n    },\n    NOT_END_WITH: {\n      code: 'NOT_END_WITH',\n      text: 'Not end with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return !_.endsWith(before, after);\n      }\n    },\n    INCLUDES: {\n      code: 'INCLUDES',\n      text: 'Includes',\n      icon: 'fa-equals',\n      exec: function exec(before, after) {\n        return _.includes(before, after);\n      }\n    },\n    NOT_INCLUDES: {\n      code: 'NOT_INCLUDES',\n      text: 'Not includes',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return !_.includes(before, after);\n      }\n    },\n    EQUALS: {\n      code: 'EQUALS',\n      text: 'Equals',\n      icon: 'fa-equals',\n      exec: function exec(before, after) {\n        return before === after;\n      }\n    },\n    NOT_EQUALS: {\n      code: 'NOT_EQUALS',\n      text: 'Not equals',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return before !== after;\n      }\n    }\n  },\n  NUMBER: {\n    START_WITH: {\n      code: 'START_WITH',\n      text: 'Start with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return _.startsWith(before, after);\n      }\n    },\n    NOT_START_WITH: {\n      code: 'NOT_START_WITH',\n      text: 'Not start with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return !_.startsWith(before, after);\n      }\n    },\n    END_WITH: {\n      code: 'END_WITH',\n      text: 'End with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return _.endsWith(before, after);\n      }\n    },\n    NOT_END_WITH: {\n      code: 'NOT_END_WITH',\n      text: 'Not end with',\n      icon: 'fa-hashtag',\n      exec: function exec(before, after) {\n        return !_.endsWith(before, after);\n      }\n    },\n    INCLUDES: {\n      code: 'INCLUDES',\n      text: 'Includes',\n      icon: 'fa-equals',\n      exec: function exec(before, after) {\n        return _.includes(before, after);\n      }\n    },\n    NOT_INCLUDES: {\n      code: 'NOT_INCLUDES',\n      text: 'Not includes',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return !_.includes(before, after);\n      }\n    },\n    EQUALS: {\n      code: 'EQUALS',\n      text: 'Equals',\n      icon: 'fa-equals',\n      exec: function exec(before, after) {\n        return before === after;\n      }\n    },\n    NOT_EQUALS: {\n      code: 'NOT_EQUALS',\n      text: 'Not equals',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return before !== after;\n      }\n    },\n    LESS_THAN: {\n      code: 'LESS_THAN',\n      text: 'Less than',\n      icon: 'fa-less-than',\n      exec: function exec(before, after) {\n        return before < after;\n      }\n    },\n    LESS_THAN_EQUAL: {\n      code: 'LESS_THAN_EQUAL',\n      text: 'Less than or equals',\n      icon: 'fa-less-than-equal',\n      exec: function exec(before, after) {\n        return before <= after;\n      }\n    },\n    GREATER_THAN: {\n      code: 'GREATER_THAN',\n      text: 'Greater than',\n      icon: 'fa-greater-than',\n      exec: function exec(before, after) {\n        return before > after;\n      }\n    },\n    GREATER_THAN_EQUAL: {\n      code: 'GREATER_THAN_EQUAL',\n      text: 'Greater than or equals',\n      icon: 'fa-greater-than-equal',\n      exec: function exec(before, after) {\n        return before >= after;\n      }\n    }\n  },\n  DATE: {\n    EQUALS: {\n      code: 'EQUALS',\n      text: 'Equals',\n      icon: 'fa-equals',\n      exec: function exec(before, after) {\n        return before.diff(after, 'days') == 0;\n      }\n    },\n    NOT_EQUALS: {\n      code: 'NOT_EQUALS',\n      text: 'Not equals',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return before.diff(after, 'days') != 0;\n      }\n    },\n    BEFORE: {\n      code: 'BEFORE',\n      text: 'Before date',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return before.diff(after, 'days') < 0;\n      }\n    },\n    AFTER: {\n      code: 'AFTER',\n      text: 'After date',\n      icon: 'fa-not-equal',\n      exec: function exec(before, after) {\n        return before.diff(after, 'days') > 0;\n      }\n    }\n  }\n};\nFILTER_OPERATIONS.DEFAULTS = {\n  STRING: FILTER_OPERATIONS.STRING.INCLUDES,\n  NUMBER: FILTER_OPERATIONS.NUMBER.INCLUDES,\n  DATE: FILTER_OPERATIONS.DATE.EQUALS\n};\nexport default FILTER_OPERATIONS;",{"version":3,"sources":["D:\\demo\\front-end\\src\\components\\commons\\perfect-table\\filter-operations.js"],"names":["_","FILTER_OPERATIONS","STRING","START_WITH","code","text","icon","exec","before","after","startsWith","NOT_START_WITH","END_WITH","endsWith","NOT_END_WITH","INCLUDES","includes","NOT_INCLUDES","EQUALS","NOT_EQUALS","NUMBER","LESS_THAN","LESS_THAN_EQUAL","GREATER_THAN","GREATER_THAN_EQUAL","DATE","diff","BEFORE","AFTER","DEFAULTS"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\n\r\nconst FILTER_OPERATIONS = {\r\n  STRING: {\r\n    START_WITH: {\r\n      code: 'START_WITH',\r\n      text: 'Start with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => _.startsWith(before, after)\r\n    },\r\n    NOT_START_WITH: {\r\n      code: 'NOT_START_WITH',\r\n      text: 'Not start with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => !_.startsWith(before, after)\r\n    },\r\n    END_WITH: {\r\n      code: 'END_WITH',\r\n      text: 'End with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => _.endsWith(before, after)\r\n    },\r\n    NOT_END_WITH: {\r\n      code: 'NOT_END_WITH',\r\n      text: 'Not end with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => !_.endsWith(before, after)\r\n    },\r\n    INCLUDES: {\r\n      code: 'INCLUDES',\r\n      text: 'Includes',\r\n      icon: 'fa-equals',\r\n      exec: (before, after) => _.includes(before, after)\r\n    },\r\n    NOT_INCLUDES: {\r\n      code: 'NOT_INCLUDES',\r\n      text: 'Not includes',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => !_.includes(before, after)\r\n    },\r\n    EQUALS: {\r\n      code: 'EQUALS',\r\n      text: 'Equals',\r\n      icon: 'fa-equals',\r\n      exec: (before, after) => before === after\r\n    },\r\n    NOT_EQUALS: {\r\n      code: 'NOT_EQUALS',\r\n      text: 'Not equals',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => before !== after\r\n    }\r\n  },\r\n\r\n  NUMBER: {\r\n    START_WITH: {\r\n      code: 'START_WITH',\r\n      text: 'Start with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => _.startsWith(before, after)\r\n    },\r\n    NOT_START_WITH: {\r\n      code: 'NOT_START_WITH',\r\n      text: 'Not start with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => !_.startsWith(before, after)\r\n    },\r\n    END_WITH: {\r\n      code: 'END_WITH',\r\n      text: 'End with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => _.endsWith(before, after)\r\n    },\r\n    NOT_END_WITH: {\r\n      code: 'NOT_END_WITH',\r\n      text: 'Not end with',\r\n      icon: 'fa-hashtag',\r\n      exec: (before, after) => !_.endsWith(before, after)\r\n    },\r\n    INCLUDES: {\r\n      code: 'INCLUDES',\r\n      text: 'Includes',\r\n      icon: 'fa-equals',\r\n      exec: (before, after) => _.includes(before, after)\r\n    },\r\n    NOT_INCLUDES: {\r\n      code: 'NOT_INCLUDES',\r\n      text: 'Not includes',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => !_.includes(before, after)\r\n    },\r\n    EQUALS: {\r\n      code: 'EQUALS',\r\n      text: 'Equals',\r\n      icon: 'fa-equals',\r\n      exec: (before, after) => before === after\r\n    },\r\n    NOT_EQUALS: {\r\n      code: 'NOT_EQUALS',\r\n      text: 'Not equals',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => before !== after\r\n    },\r\n    LESS_THAN: {\r\n      code: 'LESS_THAN',\r\n      text: 'Less than',\r\n      icon: 'fa-less-than',\r\n      exec: (before, after) => before < after\r\n    },\r\n    LESS_THAN_EQUAL: {\r\n      code: 'LESS_THAN_EQUAL',\r\n      text: 'Less than or equals',\r\n      icon: 'fa-less-than-equal',\r\n      exec: (before, after) => before <= after\r\n    },\r\n    GREATER_THAN: {\r\n      code: 'GREATER_THAN',\r\n      text: 'Greater than',\r\n      icon: 'fa-greater-than',\r\n      exec: (before, after) => before > after\r\n    },\r\n    GREATER_THAN_EQUAL: {\r\n      code: 'GREATER_THAN_EQUAL',\r\n      text: 'Greater than or equals',\r\n      icon: 'fa-greater-than-equal',\r\n      exec: (before, after) => before >= after\r\n    }\r\n  },\r\n\r\n  DATE: {\r\n    EQUALS: {\r\n      code: 'EQUALS',\r\n      text: 'Equals',\r\n      icon: 'fa-equals',\r\n      exec: (before, after) => before.diff(after, 'days') == 0\r\n    },\r\n    NOT_EQUALS: {\r\n      code: 'NOT_EQUALS',\r\n      text: 'Not equals',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => before.diff(after, 'days') != 0\r\n    },\r\n    BEFORE: {\r\n      code: 'BEFORE',\r\n      text: 'Before date',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => before.diff(after, 'days') < 0\r\n    },\r\n    AFTER: {\r\n      code: 'AFTER',\r\n      text: 'After date',\r\n      icon: 'fa-not-equal',\r\n      exec: (before, after) => before.diff(after, 'days') > 0\r\n    }\r\n  }\r\n};\r\n\r\nFILTER_OPERATIONS.DEFAULTS = {\r\n  STRING: FILTER_OPERATIONS.STRING.INCLUDES,\r\n  NUMBER: FILTER_OPERATIONS.NUMBER.INCLUDES,\r\n  DATE: FILTER_OPERATIONS.DATE.EQUALS\r\n};\r\n\r\nexport default FILTER_OPERATIONS;\r\n"]}]}