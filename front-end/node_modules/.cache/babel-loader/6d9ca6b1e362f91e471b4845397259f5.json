{"remainingRequest":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\demo\\front-end\\src\\core\\mixins\\update-data.js","dependencies":[{"path":"D:\\demo\\front-end\\src\\core\\mixins\\update-data.js","mtime":1556937921704},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556937905542},{"path":"D:\\demo\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556937903935}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\demo\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _ from 'lodash';\nexport default {\n  methods: {\n    __u: function __u(field, value, mutation) {\n      if (!field) return;\n      var updateData = {};\n\n      if (field.indexOf('.') > -1) {\n        var fields = field.split('.');\n        updateData[fields[0]] = _defineProperty({}, fields[1], value);\n      } else {\n        updateData[field] = value;\n      }\n\n      if (_.isString(mutation) && this.$store) {\n        this.$store.commit(mutation, updateData);\n      }\n\n      if (_.isFunction(mutation)) {\n        mutation(updateData);\n      }\n    }\n  }\n};",{"version":3,"sources":["D:\\demo\\front-end\\src\\core\\mixins\\update-data.js"],"names":["_","methods","__u","field","value","mutation","updateData","indexOf","fields","split","isString","$store","commit","isFunction"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GADO,eACHC,KADG,EACIC,KADJ,EACWC,QADX,EACqB;AAC1B,UAAI,CAACF,KAAL,EAAY;AACZ,UAAIG,UAAU,GAAG,EAAjB;;AACA,UAAIH,KAAK,CAACI,OAAN,CAAc,GAAd,IAAqB,CAAC,CAA1B,EAA6B;AAC3B,YAAMC,MAAM,GAAGL,KAAK,CAACM,KAAN,CAAY,GAAZ,CAAf;AACAH,QAAAA,UAAU,CAACE,MAAM,CAAC,CAAD,CAAP,CAAV,uBACGA,MAAM,CAAC,CAAD,CADT,EACeJ,KADf;AAGD,OALD,MAKO;AACLE,QAAAA,UAAU,CAACH,KAAD,CAAV,GAAoBC,KAApB;AACD;;AACD,UAAIJ,CAAC,CAACU,QAAF,CAAWL,QAAX,KAAwB,KAAKM,MAAjC,EAAyC;AACvC,aAAKA,MAAL,CAAYC,MAAZ,CAAmBP,QAAnB,EAA6BC,UAA7B;AACD;;AACD,UAAIN,CAAC,CAACa,UAAF,CAAaR,QAAb,CAAJ,EAA4B;AAC1BA,QAAAA,QAAQ,CAACC,UAAD,CAAR;AACD;AACF;AAlBM;AADI,CAAf","sourcesContent":["import _ from 'lodash';\r\n\r\nexport default {\r\n  methods: {\r\n    __u(field, value, mutation) {\r\n      if (!field) return;\r\n      let updateData = {};\r\n      if (field.indexOf('.') > -1) {\r\n        const fields = field.split('.');\r\n        updateData[fields[0]] = {\r\n          [fields[1]]: value\r\n        };\r\n      } else {\r\n        updateData[field] = value;\r\n      }\r\n      if (_.isString(mutation) && this.$store) {\r\n        this.$store.commit(mutation, updateData);\r\n      }\r\n      if (_.isFunction(mutation)) {\r\n        mutation(updateData);\r\n      }\r\n    }\r\n  }\r\n};\r\n"]}]}