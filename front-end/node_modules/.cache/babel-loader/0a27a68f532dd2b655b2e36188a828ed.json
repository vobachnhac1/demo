{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project_Mirea\\risk-box\\front-end\\src\\core\\index.js","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\core\\index.js","mtime":1556591576361},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556556014088}],"contextDependencies":[],"result":["import axios from 'axios';\nimport store from 'store';\nimport router from 'router';\nimport { HTTPClient } from \"./http-client\";\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.put['Content-Type'] = 'application/json';\naxios.defaults.headers.get['Content-Type'] = undefined;\naxios.defaults.timeout = 20000;\nexport var AXIOS_INSTANCE = axios.create({\n  baseURL: process.env.VUE_APP_WEBSERVICE_LOCATION || '/',\n  responseType: 'json'\n});\nAXIOS_INSTANCE.interceptors.response.use(function (response) {\n  if (response && response.status == 403) {\n    store.dispatch('authentication/logout');\n    router.push({\n      path: '/403'\n    });\n    return Promise.reject({\n      success: false,\n      data: null,\n      message: 'http_client.errors.403',\n      http_status: 403\n    });\n  }\n\n  return response;\n});\nexport var RESTClient = new HTTPClient(AXIOS_INSTANCE);\nexport { REQUEST_METHOD, readRequestParams } from \"./http-client\";",{"version":3,"sources":["D:\\Project_Mirea\\risk-box\\front-end\\src\\core\\index.js"],"names":["axios","store","router","HTTPClient","defaults","headers","post","put","get","undefined","timeout","AXIOS_INSTANCE","create","baseURL","process","env","VUE_APP_WEBSERVICE_LOCATION","responseType","interceptors","response","use","status","dispatch","push","path","Promise","reject","success","data","message","http_status","RESTClient","REQUEST_METHOD","readRequestParams"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,UAAT;AAEAH,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AACAN,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBE,GAAvB,CAA2B,cAA3B,IAA6C,kBAA7C;AACAP,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBG,GAAvB,CAA2B,cAA3B,IAA6CC,SAA7C;AACAT,KAAK,CAACI,QAAN,CAAeM,OAAf,GAAyB,KAAzB;AAEA,OAAO,IAAMC,cAAc,GAAGX,KAAK,CAACY,MAAN,CAAa;AACzCC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,2BAAZ,IAA2C,GADX;AAEzCC,EAAAA,YAAY,EAAE;AAF2B,CAAb,CAAvB;AAKPN,cAAc,CAACO,YAAf,CAA4BC,QAA5B,CAAqCC,GAArC,CAAyC,UAASD,QAAT,EAAmB;AAC1D,MAAIA,QAAQ,IAAIA,QAAQ,CAACE,MAAT,IAAmB,GAAnC,EAAwC;AACtCpB,IAAAA,KAAK,CAACqB,QAAN,CAAe,uBAAf;AACApB,IAAAA,MAAM,CAACqB,IAAP,CAAY;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAZ;AACA,WAAOC,OAAO,CAACC,MAAR,CAAe;AACpBC,MAAAA,OAAO,EAAE,KADW;AAEpBC,MAAAA,IAAI,EAAE,IAFc;AAGpBC,MAAAA,OAAO,EAAE,wBAHW;AAIpBC,MAAAA,WAAW,EAAE;AAJO,KAAf,CAAP;AAMD;;AACD,SAAOX,QAAP;AACD,CAZD;AAcA,OAAO,IAAMY,UAAU,GAAG,IAAI5B,UAAJ,CAAeQ,cAAf,CAAnB;AACP,SAASqB,cAAT,EAAyBC,iBAAzB","sourcesContent":["import axios from 'axios';\r\nimport store from 'store';\r\nimport router from 'router';\r\n\r\nimport { HTTPClient } from './http-client';\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\naxios.defaults.headers.put['Content-Type'] = 'application/json';\r\naxios.defaults.headers.get['Content-Type'] = undefined;\r\naxios.defaults.timeout = 20000;\r\n\r\nexport const AXIOS_INSTANCE = axios.create({\r\n  baseURL: process.env.VUE_APP_WEBSERVICE_LOCATION || '/',\r\n  responseType: 'json'\r\n});\r\n\r\nAXIOS_INSTANCE.interceptors.response.use(function(response) {\r\n  if (response && response.status == 403) {\r\n    store.dispatch('authentication/logout');\r\n    router.push({ path: '/403' });\r\n    return Promise.reject({\r\n      success: false,\r\n      data: null,\r\n      message: 'http_client.errors.403',\r\n      http_status: 403\r\n    });\r\n  }\r\n  return response;\r\n});\r\n\r\nexport const RESTClient = new HTTPClient(AXIOS_INSTANCE);\r\nexport { REQUEST_METHOD, readRequestParams } from './http-client';\r\n"]}]}