{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project_Mirea\\risk-box\\front-end\\src\\utilities\\notify\\alert.js","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\utilities\\notify\\alert.js","mtime":1556591576368},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1556556014088}],"contextDependencies":[],"result":["import _classCallCheck from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport APP_EVENT from 'core/app-events';\nimport { Checker } from 'utilities';\nimport { APPEVENT_ALERT_INFO, APPEVENT_ALERT_WARN, APPEVENT_ALERT_ERROR } from 'core/app-events';\nvar OPTIONS = {\n  INTERVAL_UPDATE_MESSAGE: false,\n  INTERVAL_TIME_UPDATE_MESSAGE: 990 // interval each 1s\n\n};\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  function _default() {\n    _classCallCheck(this, _default);\n  }\n\n  _createClass(_default, null, [{\n    key: \"CONFIRM\",\n    value: function CONFIRM(callback) {\n      YES_NO_ALERT.setCallback(function (choose) {\n        callback(Checker.hasText(choose) && choose == 'true');\n      }).open();\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      return new AlertBuilder(APPEVENT_ALERT_INFO);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      return new AlertBuilder(APPEVENT_ALERT_WARN);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      return new AlertBuilder(APPEVENT_ALERT_ERROR);\n    }\n  }]);\n\n  return _default;\n}();\n\nexport { _default as default };\n\nvar AlertBuilder =\n/*#__PURE__*/\nfunction () {\n  function AlertBuilder(event) {\n    _classCallCheck(this, AlertBuilder);\n\n    this.event_code = event;\n  }\n\n  _createClass(AlertBuilder, [{\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      if (Checker.hasText(title)) {\n        this.title = title;\n        return this;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"setMessage\",\n    value: function setMessage(message) {\n      if (Checker.hasText(message) || Checker.isFunction(message)) {\n        this.message = message;\n        return this;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"setControls\",\n    value: function setControls(controls) {\n      if (controls == null || !Checker.isObject(controls)) {\n        return null;\n      }\n\n      this.controls = controls;\n      return this;\n    }\n  }, {\n    key: \"setCallback\",\n    value: function setCallback(callback, data) {\n      if (callback == null || !Checker.isFunction(callback)) {\n        return null;\n      }\n\n      this.callback = callback;\n      this.data = data;\n      return this;\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options == null || !Checker.isObject(options)) {\n        return null;\n      }\n\n      this.options = options;\n      return this;\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {\n      if (this.title == undefined) this.title = 'global.alert.title';\n      if (this.message == undefined) return false;\n      if (this.controls == undefined) this.controls = {};\n      if (this.callback == undefined) this.callback = function () {};\n\n      if (this.options == undefined) {\n        this.options = Object.assign({}, OPTIONS);\n      } else {\n        this.options = Object.assign(OPTIONS, this.options);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this.prepare()) throw new TypeError('Please provide a message before open alert.');\n      APP_EVENT.publishEvent(this.event_code, this);\n    }\n  }]);\n\n  return AlertBuilder;\n}();\n\nvar YES_NO_ALERT = new AlertBuilder(APPEVENT_ALERT_INFO);\nYES_NO_ALERT.setTitle('global.alert.default_confirm.title').setMessage('global.alert.default_confirm.message').setControls({\n  true: {\n    text: 'global.alert.default_confirm.yes_btn',\n    color: 'primary',\n    style: 'normal',\n    dark: true\n  },\n  false: {\n    text: 'global.alert.default_confirm.no_btn',\n    color: 'info'\n  }\n});",{"version":3,"sources":["D:\\Project_Mirea\\risk-box\\front-end\\src\\utilities\\notify\\alert.js"],"names":["APP_EVENT","Checker","APPEVENT_ALERT_INFO","APPEVENT_ALERT_WARN","APPEVENT_ALERT_ERROR","OPTIONS","INTERVAL_UPDATE_MESSAGE","INTERVAL_TIME_UPDATE_MESSAGE","callback","YES_NO_ALERT","setCallback","choose","hasText","open","AlertBuilder","event","event_code","title","message","isFunction","controls","isObject","data","options","undefined","Object","assign","prepare","TypeError","publishEvent","setTitle","setMessage","setControls","true","text","color","style","dark","false"],"mappings":"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","sourcesContent":["import APP_EVENT from 'core/app-events';\r\nimport { Checker } from 'utilities';\r\nimport {\r\n  APPEVENT_ALERT_INFO,\r\n  APPEVENT_ALERT_WARN,\r\n  APPEVENT_ALERT_ERROR\r\n} from 'core/app-events';\r\n\r\nconst OPTIONS = {\r\n  INTERVAL_UPDATE_MESSAGE: false,\r\n  INTERVAL_TIME_UPDATE_MESSAGE: 990 // interval each 1s\r\n};\r\n\r\nexport default class {\r\n  static CONFIRM(callback) {\r\n    YES_NO_ALERT.setCallback(choose => {\r\n      callback(Checker.hasText(choose) && choose == 'true');\r\n    }).open();\r\n  }\r\n\r\n  static info() {\r\n    return new AlertBuilder(APPEVENT_ALERT_INFO);\r\n  }\r\n\r\n  static warn() {\r\n    return new AlertBuilder(APPEVENT_ALERT_WARN);\r\n  }\r\n\r\n  static error() {\r\n    return new AlertBuilder(APPEVENT_ALERT_ERROR);\r\n  }\r\n}\r\n\r\nclass AlertBuilder {\r\n  constructor(event) {\r\n    this.event_code = event;\r\n  }\r\n\r\n  setTitle(title) {\r\n    if (Checker.hasText(title)) {\r\n      this.title = title;\r\n      return this;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setMessage(message) {\r\n    if (Checker.hasText(message) || Checker.isFunction(message)) {\r\n      this.message = message;\r\n      return this;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setControls(controls) {\r\n    if (controls == null || !Checker.isObject(controls)) {\r\n      return null;\r\n    }\r\n    this.controls = controls;\r\n    return this;\r\n  }\r\n\r\n  setCallback(callback, data) {\r\n    if (callback == null || !Checker.isFunction(callback)) {\r\n      return null;\r\n    }\r\n    this.callback = callback;\r\n    this.data = data;\r\n    return this;\r\n  }\r\n\r\n  setOptions(options) {\r\n    if (options == null || !Checker.isObject(options)) {\r\n      return null;\r\n    }\r\n    this.options = options;\r\n    return this;\r\n  }\r\n\r\n  prepare() {\r\n    if (this.title == undefined) this.title = 'global.alert.title';\r\n\r\n    if (this.message == undefined) return false;\r\n\r\n    if (this.controls == undefined) this.controls = {};\r\n\r\n    if (this.callback == undefined) this.callback = () => {};\r\n\r\n    if (this.options == undefined) {\r\n      this.options = Object.assign({}, OPTIONS);\r\n    } else {\r\n      this.options = Object.assign(OPTIONS, this.options);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  open() {\r\n    if (!this.prepare())\r\n      throw new TypeError('Please provide a message before open alert.');\r\n\r\n    APP_EVENT.publishEvent(this.event_code, this);\r\n  }\r\n}\r\n\r\nconst YES_NO_ALERT = new AlertBuilder(APPEVENT_ALERT_INFO);\r\nYES_NO_ALERT.setTitle('global.alert.default_confirm.title')\r\n  .setMessage('global.alert.default_confirm.message')\r\n  .setControls({\r\n    true: {\r\n      text: 'global.alert.default_confirm.yes_btn',\r\n      color: 'primary',\r\n      style: 'normal',\r\n      dark: true\r\n    },\r\n    false: {\r\n      text: 'global.alert.default_confirm.no_btn',\r\n      color: 'info'\r\n    }\r\n  });\r\n"]}]}