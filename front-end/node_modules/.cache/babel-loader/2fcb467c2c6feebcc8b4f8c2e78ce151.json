{"remainingRequest":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\perfect-table\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project_Mirea\\risk-box\\front-end\\src\\components\\commons\\perfect-table\\index.vue","mtime":1556591576353},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556555986820},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556556018404},{"path":"D:\\Project_Mirea\\risk-box\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1556556019204}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"D:\\\\Project_Mirea\\\\risk-box\\\\front-end\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nimport TableDragger from 'table-dragger';\nimport CheckBox from \"./checkbox\";\nimport { FILTER_ULTIS } from \"./filter-compare\";\nimport PERFECT_TABLE_FILTER_OPERATIONS from \"./filter-operations\";\nimport { PERFECT_TABLE_HOVER_COLOR, MENU_CONTROLS, PERFECT_TABLE_ACTION_SCOPE, PERFECT_TABLE_PAGE_SIZE, PERFECT_TABLE_FILTER_TYPES } from \"./table-constants\";\nexport default {\n  components: {\n    CheckBox: CheckBox\n  },\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    headers: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    custom: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n\n    /**\r\n     * Filter configuration structure\r\n     * {\r\n     *    a: 'STRING',\r\n     *    b: 'string',\r\n     *    c: 'BOOL',\r\n     *    d: 'bool',\r\n     *    e: 'NUMBER',\r\n     *    f: 'number',\r\n     *    g: 'DATE'\r\n     *    h: {\r\n     *      type: 'date',\r\n     *      width: '100px',\r\n     *      alias: '<NAME FOR SHOWN UP>'\r\n     *    }\r\n     * }\r\n     */\n    filter: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      table_id: \"\".concat(new Date().getTime()),\n      reload: \"\".concat(new Date().getTime()),\n      columns: [],\n      data_table: [],\n      options: {\n        key: null,\n        sortable: [],\n        hiddens: [],\n        editables: [],\n        autoNo: false,\n        checker: false,\n        dragable: false,\n        outline: true,\n        center: [],\n        decorates: {\n          text: {},\n          class: {},\n          default: '',\n          hover: _.assign(_.cloneDeep(PERFECT_TABLE_HOVER_COLOR), {\n            only_cell: false\n          })\n        },\n        fixed_row_page: false,\n        fixed_page: false,\n        page_size: PERFECT_TABLE_PAGE_SIZE,\n        footer_autohidden: false,\n        actions: {}\n      },\n      pagination: {\n        rowsPerPage: 5,\n        page: 1,\n        totalItems: this.value.length\n      },\n      actions: {\n        row: [],\n        global: [],\n        click: []\n      },\n      all_check: false,\n      map_checkbox: {},\n      filter_options: {\n        turn_on: false,\n        state: false\n      },\n      search_map: {},\n      choose_model: {\n        show: false,\n        x: 0,\n        y: 0,\n        column: '',\n        current: {},\n        operations: []\n      },\n      menu_context: {\n        show: false,\n        x: 0,\n        y: 0,\n        target_col: '',\n        target_record: {},\n        options: []\n      }\n    };\n  },\n  computed: {\n    calcTotalPage: function calcTotalPage() {\n      var total = _.floor(this.pagination.totalItems / this.pagination.rowsPerPage);\n\n      if (this.pagination.totalItems % this.pagination.rowsPerPage > 0) {\n        total++;\n      }\n\n      return total;\n    },\n    computedEmptyRow: function computedEmptyRow() {\n      var lastRows = this.data_table.length % this.pagination.rowsPerPage;\n      return this.pagination.rowsPerPage - lastRows;\n    }\n  },\n  watch: {\n    value: function value() {\n      this.data_table = _.cloneDeep(this.value);\n      this.filtering();\n      this.loadCheckbox();\n    },\n    data_table: {\n      handler: function handler() {\n        this.pagination.totalItems = this.data_table.length;\n\n        for (var i in this.data_table) {\n          var row = this.data_table[i];\n          row.$no = Number(i) + 1;\n\n          if (_.isNil(row[this.options.key])) {\n            throw new TypeError(\"Data is not valid [\".concat(JSON.stringify(row), \"]\"));\n          }\n\n          var index = _.findIndex(this.value, _defineProperty({}, this.options.key, row[this.options.key]));\n\n          _.assign(this.value[index], this.removeControlCol(row));\n        }\n      },\n      deep: true\n    },\n    'filter_options.state': {\n      handler: function handler() {\n        if (this.filter_options.state) {\n          this.filtering();\n        } else {\n          this.data_table = _.cloneDeep(this.value);\n        }\n      },\n      deep: true\n    },\n    'pagination.rowsPerPage': {\n      handler: function handler() {\n        if (this.calcTotalPage == 0) {\n          this.pagination.page = 1;\n        } else if (this.pagination.page > this.calcTotalPage) {\n          this.pagination.page = this.calcTotalPage;\n        }\n\n        this.reloadCheckbox();\n      },\n      deep: true\n    },\n    'pagination.page': {\n      handler: function handler() {\n        this.reloadCheckbox();\n      },\n      deep: true\n    }\n  },\n  created: function created() {\n    this.mergeConfigs();\n    this.readColumns();\n    this.data_table = _.cloneDeep(this.value);\n    this.loadCheckbox();\n    this.readFilterOptions();\n    this.loadActions();\n    this.loadPaging();\n  },\n  updated: function updated() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.data_table.length > 0) {\n        _this.tableDragable();\n      }\n    });\n  },\n  methods: {\n    mergeConfigs: function mergeConfigs() {\n      _.assignIn(this.options.decorates, this.custom.decorates);\n\n      var custom = _.omit(this.custom, 'decorates');\n\n      _.assignIn(this.options, custom);\n    },\n    readColumns: function readColumns() {\n      if (_.isNil(this.options.key)) {\n        throw new TypeError('Please provide a valid column name as KEY');\n      }\n\n      this.pagination.sortBy = this.options.key;\n\n      if (_.isBoolean(this.options.checker) && this.options.checker) {\n        this.columns.push({\n          text: 'Checker',\n          align: 'center',\n          value: '$checker',\n          width: '50px'\n        });\n        this.menu_context.options.push({});\n        this.checkPermission();\n      }\n\n      this.columns.push({\n        text: 'global.table.columns.no',\n        align: 'center',\n        sortable: true,\n        value: '$no',\n        width: '50px'\n      });\n\n      if (_.isBoolean(this.options.autoNo) && !this.options.autoNo) {\n        this.options.hiddens.push('$no');\n      }\n\n      if (!_.isEmpty(this.headers)) {\n        for (var column in this.headers) {\n          if (!_.isEmpty(this.options.hiddens) && _.includes(this.options.hiddens, column)) {\n            continue;\n          }\n\n          var editable = _.includes(this.options.editables, column);\n\n          this.columns.push({\n            text: this.headers[column],\n            align: this.isTextCenter(column),\n            sortable: this.isSortable(column),\n            editable: editable,\n            value: column,\n            width: this.calcWidthColumn(column),\n            alias: this.retrieveAlias(column)\n          });\n        }\n      }\n    },\n    checkPermission: function checkPermission() {\n      var _this2 = this;\n\n      navigator.permissions.query({\n        name: 'clipboard-write'\n      }).then(function (result) {\n        if (result.state == 'granted' || result.state == 'prompt') {\n          _this2.menu_context.options = _.concat(_this2.menu_context.options, MENU_CONTROLS.COPY_INTO_CLIPBORAD());\n        }\n      });\n    },\n    loadCheckbox: function loadCheckbox(value) {\n      if (_.isBoolean(this.options.checker) && this.options.checker) {\n        for (var index in this.value) {\n          var el = this.value[index];\n          var keyRow = el[this.options.key];\n          this.map_checkbox[keyRow] = _.isBoolean(value) ? value : false;\n          this.selectRow(this.map_checkbox[keyRow], keyRow, null, true);\n        }\n      }\n    },\n    reloadCheckbox: function reloadCheckbox() {\n      var _this3 = this;\n\n      if (!_.isBoolean(this.options.checker) || !this.options.checker) return;\n      this.$nextTick(function () {\n        _this3.data_table.forEach(function (el) {\n          var key = el[_this3.options.key];\n\n          _this3.$bus.$emit(\"select_\".concat(key, \"_\").concat(_this3.table_id), _this3.map_checkbox[key]);\n        });\n      });\n    },\n    selectAll: function selectAll(select) {\n      if (_.isBoolean(select) && !select) {\n        this.all_check = false;\n        this.$emit('choosing', []);\n      } else {\n        this.$emit('choosing', this.collectSelectedRow(true));\n      }\n\n      for (var key in this.map_checkbox) {\n        this.map_checkbox[key] = this.all_check;\n      }\n\n      this.$bus.$emit(\"select_all_\".concat(this.table_id), this.all_check);\n    },\n    selectRow: function selectRow(val, key, isStop, isIgonre) {\n      this.map_checkbox[key] = val;\n      this.reload = \"\".concat(new Date().getTime());\n      var isAll = true;\n\n      _.forIn(this.map_checkbox, function (val) {\n        if (!val) {\n          isAll = false;\n        }\n      });\n\n      this.all_check = isAll;\n\n      if (_.isNil(isStop)) {\n        this.$bus.$emit(\"select_\".concat(key, \"_\").concat(this.table_id), val);\n      }\n\n      if (_.isNil(isIgonre)) {\n        this.$emit('choosing', this.collectSelectedRow());\n      }\n    },\n    collectSelectedRow: function collectSelectedRow(isAll) {\n      if (isAll) {\n        if (this.all_check) {\n          return _.cloneDeep(this.data_table);\n        } else {\n          return [];\n        }\n      } else {\n        var result = [];\n\n        for (var key in this.map_checkbox) {\n          if (this.map_checkbox[key]) {\n            var record = _.find(this.data_table, _defineProperty({}, this.options.key, key));\n\n            result.push(record);\n          }\n        }\n\n        return result;\n      }\n    },\n    readFilterOptions: function readFilterOptions() {\n      var _this4 = this;\n\n      if (_.isObject(this.filter) && !_.isEmpty(this.filter)) {\n        this.filter_options.turn_on = true;\n\n        var filterCols = _.keys(this.filter).filter(function (key) {\n          return !_.isNil(_this4.headers[key]) && !_.includes(_this4.options.hiddens, key);\n        });\n\n        filterCols.forEach(function (column) {\n          var type = _this4.validFilterTypes(_this4.filter[column]);\n\n          _this4.search_map[column] = {\n            value: null,\n            key: _this4.options.key,\n            type: type,\n            column: column,\n            results: [],\n            operation: PERFECT_TABLE_FILTER_OPERATIONS.DEFAULTS[type]\n          };\n        });\n      }\n    },\n    loadActions: function loadActions() {\n      if (_.isBoolean(this.options.dragable) && this.options.dragable) {\n        this.columns = _.concat({\n          text: '',\n          align: 'center',\n          sortable: false,\n          value: '$drag_row',\n          width: '20px'\n        }, this.columns);\n      }\n\n      if (!_.isNil(this.options.actions) && !_.isEmpty(this.options.actions)) {\n        this.columns.push({\n          text: 'global.table.columns.action',\n          align: 'center',\n          sortable: false,\n          value: '$actions'\n        });\n\n        for (var key in this.options.actions) {\n          var action = this.options.actions[key]; // action.callback = this.handleAction(key, action.callback);\n\n          if (_.isString(action.scope)) {\n            switch (action.scope) {\n              case PERFECT_TABLE_ACTION_SCOPE.RECORD:\n                this.actions.row.push(action);\n                break;\n\n              case PERFECT_TABLE_ACTION_SCOPE.GLOBAL:\n                this.actions.global.push(action);\n                break;\n\n              case PERFECT_TABLE_ACTION_SCOPE.CLICK.ROW:\n                this.actions.click.push(action);\n                break;\n\n              case PERFECT_TABLE_ACTION_SCOPE.CLICK.CELL:\n                if (_.isString(action.target) && (_.startsWith(action.target, '$') || _.isNil(this.headers[action.target]))) {\n                  break;\n                }\n\n                this.actions.click.push(action);\n                break;\n            }\n          }\n        }\n      }\n    },\n    callback: function callback(action, record, event) {\n      event.preventDefault();\n      event.stopPropagation();\n      record = this.removeControlCol(record);\n      action.callback(record[this.options.key], record, event);\n    },\n    handleEvent: function handleEvent(record, col, event, rightClick) {\n      var _this5 = this;\n\n      var key = record[this.options.key];\n      event.preventDefault();\n\n      if (rightClick) {\n        this.menu_context.show = false;\n        this.menu_context.x = event.clientX;\n        this.menu_context.y = event.clientY;\n        this.menu_context.target_col = col;\n        this.menu_context.target_record = record;\n\n        if (_.isBoolean(this.options.checker) && this.options.checker) {\n          var option = MENU_CONTROLS.SELECT_ROW();\n\n          if (this.map_checkbox[key]) {\n            option = MENU_CONTROLS.UNSELECT_ROW();\n          }\n\n          this.menu_context.options[0] = option;\n        }\n\n        this.$nextTick(function () {\n          if (_this5.menu_context.options.length == 0) return;\n          _this5.menu_context.show = true;\n        });\n      } else {\n        var result = {\n          data: _.omit(record, '$no')\n        };\n        result[this.options.key] = key;\n\n        for (var index in this.actions.click) {\n          var action = this.actions.click[index];\n\n          if (action.scope == PERFECT_TABLE_ACTION_SCOPE.CLICK.CELL) {\n            result.target = col;\n            result.target_value = record[col];\n\n            if (_.startsWith(col, '$') || !_.isNil(action.target) && action.target !== col) {\n              continue;\n            }\n          }\n\n          action.callback(result, event);\n        }\n      }\n    },\n    menuContextAction: function menuContextAction(code) {\n      var record = this.removeControlCol(this.menu_context.target_record);\n      var key = record[this.options.key];\n\n      switch (code) {\n        case 'COPY_CELL':\n          if (_.startsWith(this.menu_context.target_col, '$')) {\n            this.copyToClipBoard(null);\n          } else {\n            this.copyToClipBoard(record[this.menu_context.target_col]);\n          }\n\n          break;\n\n        case 'COPY_ROW':\n          this.copyToClipBoard(JSON.stringify(record));\n          break;\n\n        case 'SELECT_ROW':\n          this.selectRow(!this.map_checkbox[key], key);\n          break;\n      }\n    },\n    removeControlCol: function removeControlCol(record) {\n      var needRemove = [];\n\n      for (var key in record) {\n        if (_.startsWith(key, '$')) {\n          needRemove.push(key);\n        }\n      }\n\n      return _.omit(record, needRemove);\n    },\n    copyToClipBoard: function copyToClipBoard(data) {\n      navigator.permissions.query({\n        name: 'clipboard-write'\n      }).then(function (result) {\n        if (result.state == 'granted' || result.state == 'prompt') {\n          if (_.isNil(data)) data = '<NO_DATA>';\n          navigator.clipboard.writeText(data);\n        }\n      });\n    },\n    tableDragable: function tableDragable() {\n      if (_.isBoolean(this.options.dragable) && this.options.dragable) {\n        var dragger = TableDragger(this.$el.getElementsByTagName('table')[0], {\n          mode: 'row',\n          dragHandler: '.row_handle',\n          onlyBody: true,\n          animation: 300\n        });\n        dragger.on('drop', function () {});\n      }\n    },\n    openOperationList: function openOperationList(column, event) {\n      var _this6 = this;\n\n      event.preventDefault();\n      this.focusTextField(\"filter_\".concat(column));\n      this.choose_model = {\n        show: false,\n        column: column,\n        current: this.search_map[column].operation,\n        operations: PERFECT_TABLE_FILTER_OPERATIONS[this.search_map[column].type]\n      };\n      this.choose_model.x = event.clientX;\n      this.choose_model.y = event.clientY;\n      this.$nextTick(function () {\n        _this6.choose_model.show = true;\n      });\n    },\n    chooseOperation: function chooseOperation(column, choice, event) {\n      event.preventDefault();\n      this.focusTextField(\"filter_\".concat(column));\n      var type = this.search_map[column].type;\n      this.search_map[column].operation = PERFECT_TABLE_FILTER_OPERATIONS[type][choice];\n      this.filterColumnToResult(column);\n    },\n    filtering: function filtering() {\n      var _this7 = this;\n\n      if (!this.filter_options.turn_on) return;\n\n      _.forIn(this.search_map, function (value, column) {\n        _this7.filterColunm(column);\n      });\n\n      this.getResult();\n    },\n    filterColunm: function filterColunm(column) {\n      var _this8 = this;\n\n      var condition = this.search_map[column];\n      this.search_map[column].results = [];\n\n      if (!FILTER_ULTIS.ignore[condition.type](condition.value)) {\n        this.value.forEach(function (el) {\n          if (!_.isNil(el[column])) {\n            FILTER_ULTIS.filter(_this8.search_map[column], el);\n          }\n        });\n      }\n    },\n    filterColumnToResult: function filterColumnToResult(column) {\n      this.filterColunm(column);\n      this.getResult();\n    },\n    changeFilterController: function changeFilterController() {\n      this.filter_options.state = !this.filter_options.state;\n\n      if (this.filter_options.state) {\n        this.filtering();\n      } else {\n        this.cleanFilterCache();\n        this.data_table = _.cloneDeep(this.value);\n      }\n    },\n    cleanFilterCache: function cleanFilterCache() {\n      _.forIn(this.search_map, function (condition) {\n        condition.value = null;\n        condition.results = [];\n      });\n    },\n    getResult: function getResult() {\n      var _this9 = this;\n\n      var accepts = null;\n\n      _.forIn(this.search_map, function (filter) {\n        if (FILTER_ULTIS.ignore[filter.type](filter.value)) {\n          filter.results = [];\n        } else {\n          if (accepts == null) {\n            accepts = filter.results;\n            return;\n          }\n\n          accepts = _.intersection(accepts, filter.results);\n        }\n      });\n\n      if (accepts != null) {\n        this.data_table = this.value.filter(function (el) {\n          return _.includes(accepts, el[_this9.options.key]);\n        });\n      } else {\n        this.data_table = _.cloneDeep(this.value);\n      }\n\n      this.selectAll(false);\n      this.reloadCheckbox();\n    },\n    validFilterTypes: function validFilterTypes(colType) {\n      if (_.isNil(colType)) return PERFECT_TABLE_FILTER_TYPES[0];\n      var ignoreCaseVal = '';\n\n      if (_.isObject(colType)) {\n        if (_.isNil(colType.type)) return PERFECT_TABLE_FILTER_TYPES[0];else return _.toUpper(colType.type);\n      } else {\n        ignoreCaseVal = _.toUpper(colType);\n      }\n\n      if (PERFECT_TABLE_FILTER_TYPES.includes(ignoreCaseVal)) {\n        return ignoreCaseVal;\n      } else {\n        return PERFECT_TABLE_FILTER_TYPES[0];\n      }\n    },\n    loadCustomCss: function loadCustomCss() {\n      var hexRegex = /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/;\n\n      var options = _.cloneDeep(PERFECT_TABLE_HOVER_COLOR);\n\n      if (_.isNil(this.options.decorates)) {\n        this.options.decorates = {\n          hover: {\n            only_cell: false\n          }\n        };\n      } else if (_.isNil(this.options.decorates.hover)) {\n        this.options.decorates.hover = {\n          only_cell: false\n        };\n      } else {\n        var custom = _.cloneDeep(this.options.decorates.hover);\n\n        if (_.isString(custom.color) && hexRegex.test(custom.color)) {\n          options.COLOR = custom.color;\n        }\n\n        if (_.isString(custom.background) && hexRegex.test(custom.background)) {\n          options.BACKGROUND = custom.background;\n        }\n      }\n\n      return {\n        '--t-empty-row': PERFECT_TABLE_HOVER_COLOR.BACKGROUND,\n        '--t-hover-text': options.COLOR,\n        '--t-hover': options.BACKGROUND\n      };\n    },\n    hoverHandle: function hoverHandle(event, isHover) {\n      var el = event.target;\n\n      if (isHover) {\n        if (this.options.decorates.hover.only_cell) {\n          el.className = el.className.replace(' t-hover', '');\n        } else {\n          this.hoverRowHandle(el, isHover);\n        }\n      } else {\n        if (this.options.decorates.hover.only_cell) {\n          el.className += ' t-hover';\n        } else {\n          this.hoverRowHandle(el, isHover);\n        }\n      }\n    },\n    hoverRowHandle: function hoverRowHandle(el, isHover) {\n      var childs = Array.from(el.parentNode.children);\n\n      for (var index in childs) {\n        if (isHover) {\n          childs[index].className = childs[index].className.replace(' t-hover', '');\n        } else {\n          childs[index].className += ' t-hover';\n        }\n      }\n    },\n    focusTextField: function focusTextField(control) {\n      var component = this.$refs[control];\n\n      if (component != undefined && component[0] != undefined) {\n        var inputControl = component[0].$el.getElementsByTagName('input');\n        inputControl[0].focus();\n      }\n    },\n    ignoreHidden: function ignoreHidden(headers) {\n      var _this10 = this;\n\n      return headers.filter(function (col) {\n        return _.isEmpty(_this10.options.hiddens) || !_.includes(_this10.options.hiddens, col.value);\n      });\n    },\n    isSortable: function isSortable(col) {\n      return _.isArray(this.options.sortable) && _.includes(this.options.sortable, col);\n    },\n    isTextCenter: function isTextCenter(col) {\n      return _.isArray(this.options.center) && _.includes(this.options.center, col) ? 'center' : 'left';\n    },\n    calcWidthColumn: function calcWidthColumn(col) {\n      if (!_.isNil(this.filter[col]) && _.isObject(this.filter[col]) && !_.isNil(this.filter[col].width)) {\n        return this.filter[col].width;\n      } else {\n        return '100px';\n      }\n    },\n    retrieveAlias: function retrieveAlias(col) {\n      if (_.isNil(this.filter) || _.isNil(this.filter[col]) || _.isNil(this.filter[col].alias)) return this.headers[col];\n      return this.filter[col].alias;\n    },\n    enableFilterCol: function enableFilterCol(col) {\n      if (_.isNil(this.filter) || _.isNil(this.filter[col])) return false;\n      return true;\n    },\n    computedDecorateRow: function computedDecorateRow(record) {\n      this.reload ? true : false;\n      var key = record[this.options.key];\n      var result = [];\n\n      if (_.isBoolean(this.options.checker) && this.options.checker) {\n        if (this.map_checkbox[key]) {\n          result.push('t-hover');\n        }\n      }\n\n      if (_.isNil(this.options.decorates.row) || !_.isArray(this.options.decorates.row)) {\n        return result;\n      }\n\n      this.options.decorates.row.forEach(function (el) {\n        if (_.isFunction(el.condition) && el.condition(record)) {\n          result.push(el.class);\n        }\n      });\n      return result;\n    },\n    showEmptyRow: function showEmptyRow(index) {\n      index++;\n      return this.options.fixed_row_page && this.pagination.page == this.calcTotalPage && index == this.pagination.totalItems % this.pagination.rowsPerPage;\n    },\n    holdFitlerControl: function holdFitlerControl(hover, column) {\n      var component = this.$refs[\"filter_\".concat(column)];\n      var isFocus = false;\n\n      if (component != undefined && component[0] != undefined) {\n        isFocus = component[0].isFocused;\n      }\n\n      var val = this.search_map[column].value;\n\n      if (val == '') {\n        this.search_map[column].value = null;\n      }\n\n      return hover || isFocus || this.search_map[column].value != null;\n    },\n    changeSort: function changeSort(sortable, column) {\n      if (this.filter_options.state && !_.isNil(this.search_map[column])) return;\n      if (!sortable) return;\n\n      if (this.pagination.sortBy === column) {\n        this.pagination.descending = !this.pagination.descending;\n      } else {\n        this.pagination.sortBy = column;\n        this.pagination.descending = false;\n      }\n\n      this.reloadCheckbox();\n    },\n    computedCellValue: function computedCellValue(col, val) {\n      if (_.isNil(this.options.decorates) || _.isNil(this.options.decorates.text) || _.isNil(this.options.decorates.text[col])) {\n        return val;\n      }\n\n      return this.options.decorates.text[col](val);\n    },\n    emptyField: function emptyField(col, val) {\n      if (!_.startsWith(col, '$') && _.isNil(val)) {\n        return {\n          background: '#fff5f5'\n        };\n      }\n\n      return {};\n    },\n    loadPaging: function loadPaging() {\n      var _this11 = this;\n\n      var headers = this.columns.filter(function (col) {\n        return _.isEmpty(_this11.options.hiddens) || !_.includes(_this11.options.hiddens, col.value);\n      });\n\n      if (_.isArray(this.options.page_size)) {\n        if (this.options.page_size.length == 0) {\n          this.options.page_size = PERFECT_TABLE_PAGE_SIZE;\n        } else if (this.options.page_size.length == 1) {\n          this.options.fixed_page = true;\n        }\n      } else {\n        this.options.page_size = PERFECT_TABLE_PAGE_SIZE;\n      }\n\n      this.pagination.rowsPerPage = this.options.page_size[0];\n      this.pagination.descending = false;\n      this.pagination.sortBy = this.options.key;\n\n      if (!_.isEmpty(this.options.hiddens) && _.includes(this.options.hiddens, this.options.key)) {\n        if (_.isBoolean(this.options.autoNo) && this.options.autoNo) {\n          this.pagination.sortBy = '$no';\n        } else if (_.isBoolean(this.options.dragable) && this.options.dragable) {\n          this.pagination.sortBy = headers.length > 1 ? headers[1].value : '';\n        } else {\n          this.pagination.sortBy = headers[0].value;\n        }\n      }\n\n      return headers;\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style=\"loadCustomCss()\">\r\n    <div :class=\"['perfect_table', options.outline ? 'elevation-1' : '']\">\r\n      <v-data-table\r\n        :headers=\"columns\"\r\n        :items=\"data_table\"\r\n        :pagination.sync=\"pagination\"\r\n        :sort-icon=\"$vuetify.icons.SORT\"\r\n        hide-actions\r\n      >\r\n        <template slot=\"headers\" slot-scope=\"props\">\r\n          <tr>\r\n            <template v-for=\"header in ignoreHidden(props.headers)\">\r\n              <th v-if=\"header.value === '$checker'\" :key=\"header.text\">\r\n                <v-checkbox\r\n                  v-model=\"all_check\"\r\n                  :ripple=\"false\"\r\n                  height=\"24\"\r\n                  class=\"checker_col\"\r\n                  @change=\"selectAll\"\r\n                />\r\n              </th>\r\n\r\n              <v-hover\r\n                v-else-if=\"enableFilterCol(header.value)\"\r\n                :key=\"header.text\"\r\n              >\r\n                <th\r\n                  slot-scope=\"{ hover }\"\r\n                  :class=\"[\r\n                    'filter column px-2',\r\n                    header.sortable\r\n                      ? pagination.descending\r\n                        ? 'sortable desc'\r\n                        : 'sortable asc'\r\n                      : '',\r\n                    header.value === pagination.sortBy ? 'active' : '',\r\n                    header.align == 'center' ? 'text-xs-center' : 'text-xs-left'\r\n                  ]\"\r\n                  :style=\"{ 'min-width': header.width }\"\r\n                  @click=\"changeSort(header.sortable, header.value)\"\r\n                >\r\n                  {{ $t(header.text) }}\r\n                  <v-icon v-if=\"header.sortable\" small>\r\n                    {{ $vuetify.icons.SORT }}\r\n                  </v-icon>\r\n                  <v-expand-transition\r\n                    v-if=\"\r\n                      filter_options.state &&\r\n                        search_map[header.value] != undefined\r\n                    \"\r\n                  >\r\n                    <v-text-field\r\n                      v-show=\"holdFitlerControl(hover, header.value)\"\r\n                      :ref=\"`filter_${header.value}`\"\r\n                      v-model=\"search_map[header.value].value\"\r\n                      :label=\"header.text\"\r\n                      :prefix=\"`${header.alias}:`\"\r\n                      :append-icon=\"search_map[header.value].operation.icon\"\r\n                      solo\r\n                      class=\"filter_wrapper\"\r\n                      @input=\"filterColumnToResult(header.value)\"\r\n                      @click:append=\"openOperationList(header.value, $event)\"\r\n                    />\r\n                  </v-expand-transition>\r\n                </th>\r\n              </v-hover>\r\n\r\n              <th v-else :key=\"header.text\">{{ $t(header.text) }}</th>\r\n            </template>\r\n          </tr>\r\n        </template>\r\n        <template slot=\"items\" slot-scope=\"props\">\r\n          <tr :class=\"computedDecorateRow(props.item)\">\r\n            <td\r\n              v-for=\"col in ignoreHidden(columns)\"\r\n              :key=\"col.value\"\r\n              :style=\"emptyField(col.value, props.item[col.value])\"\r\n              :class=\"[\r\n                enableFilterCol(col.value) ? 'filter' : '',\r\n                options.decorates.default,\r\n                options.decorates.class[col.value] || '',\r\n                col.value == '$drag_row' ? 'row_handle' : '',\r\n                col.align == 'center' ? 'text-xs-center' : 'text-xs-left'\r\n              ]\"\r\n              @contextmenu=\"handleEvent(props.item, col.value, $event, true)\"\r\n              @click=\"handleEvent(props.item, col.value, $event, false)\"\r\n              @mouseenter=\"hoverHandle($event, false)\"\r\n              @mouseleave=\"hoverHandle($event, true)\"\r\n            >\r\n              <template v-if=\"col.value == '$drag_row'\">\r\n                <v-icon small>{{ $vuetify.icons.DRAG }}</v-icon>\r\n              </template>\r\n              <template v-else-if=\"col.value == '$checker'\">\r\n                <check-box\r\n                  :id=\"props.item[options.key]\"\r\n                  :key=\"props.item[options.key]\"\r\n                  :table=\"table_id\"\r\n                  class=\"checker_col\"\r\n                  @change=\"val => selectRow(val, props.item[options.key], true)\"\r\n                />\r\n              </template>\r\n              <template v-else-if=\"col.editable\">\r\n                <slot\r\n                  :record=\"props.item\"\r\n                  :column=\"col.value\"\r\n                  name=\"editable\"\r\n                />\r\n              </template>\r\n              <template v-else-if=\"col.value == '$actions'\">\r\n                <div class=\"layout justify-center\">\r\n                  <div\r\n                    v-for=\"(action, index) in actions.row\"\r\n                    :key=\"index\"\r\n                    :class=\"[\r\n                      'align-self-center',\r\n                      index < actions.row.length - 1 ? 'mr-2' : ''\r\n                    ]\"\r\n                  >\r\n                    <v-btn\r\n                      v-if=\"action.text != undefined\"\r\n                      small\r\n                      outline\r\n                      color=\"primary\"\r\n                      @click=\"callback(action, props.item, $event)\"\r\n                    >\r\n                      <v-icon\r\n                        v-if=\"action.icon != undefined\"\r\n                        small\r\n                        class=\"mr-2\"\r\n                      >\r\n                        {{ action.icon }}\r\n                      </v-icon>\r\n                      {{ action.text }}\r\n                    </v-btn>\r\n                    <v-icon\r\n                      v-else\r\n                      small\r\n                      :color=\"\r\n                        action.color != undefined ? action.color : 'primary'\r\n                      \"\r\n                      @click=\"callback(action, props.item, $event)\"\r\n                    >\r\n                      {{ action.icon }}\r\n                    </v-icon>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n              <template v-else>\r\n                {{ computedCellValue(col.value, props.item[col.value]) }}\r\n              </template>\r\n            </td>\r\n          </tr>\r\n          <template v-if=\"showEmptyRow(props.index)\">\r\n            <template v-for=\"r in computedEmptyRow\">\r\n              <tr :key=\"r\" class=\"empty-row\">\r\n                <td colspan=\"100\" />\r\n              </tr>\r\n            </template>\r\n          </template>\r\n        </template>\r\n        <template slot=\"no-data\">\r\n          <template v-if=\"options.fixed_row_page\">\r\n            <tr v-for=\"r in pagination.rowsPerPage\" :key=\"r\" class=\"empty-row\">\r\n              <td\r\n                v-if=\"r == Math.floor(pagination.rowsPerPage / 2 + 0.5)\"\r\n                colspan=\"100\"\r\n              >\r\n                <v-layout align-center justify-center row fill-height>\r\n                  <div>{{ $t('global.table.message.no_data') }}</div>\r\n                </v-layout>\r\n              </td>\r\n              <td v-else colspan=\"100\" />\r\n            </tr>\r\n          </template>\r\n          <tr v-else>\r\n            <td class=\"empty-row\" colspan=\"100\">\r\n              <v-layout align-center justify-center row fill-height>\r\n                <div>{{ $t('global.table.message.no_data') }}</div>\r\n              </v-layout>\r\n            </td>\r\n          </tr>\r\n        </template>\r\n      </v-data-table>\r\n      <div\r\n        v-if=\"\r\n          !options.footer_autohidden ||\r\n            (!options.fixed_page || calcTotalPage > 1)\r\n        \"\r\n        class=\"table_footer px-4\"\r\n      >\r\n        <template v-if=\"!options.fixed_page\">\r\n          <div\r\n            v-if=\"filter_options.turn_on\"\r\n            class=\"inline mr-4 filtering_controller\"\r\n            @click=\"changeFilterController\"\r\n          >\r\n            <v-icon :color=\"filter_options.state ? 'primary' : '#b1b1b1'\">\r\n              fa-filter\r\n            </v-icon>\r\n          </div>\r\n          <div class=\"inline mr-4\">{{ $t('global.table.page_size') }}</div>\r\n          <div class=\"inline page_size\">\r\n            <v-select\r\n              v-model=\"pagination.rowsPerPage\"\r\n              :items=\"options.page_size\"\r\n            />\r\n          </div>\r\n        </template>\r\n        <div\r\n          v-if=\"!options.footer_autohidden || calcTotalPage > 1\"\r\n          class=\"pagging\"\r\n        >\r\n          <v-pagination\r\n            v-model=\"pagination.page\"\r\n            :length=\"calcTotalPage\"\r\n            :total-visible=\"5\"\r\n          ></v-pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <v-menu\r\n      v-if=\"filter_options.turn_on\"\r\n      v-model=\"choose_model.show\"\r\n      :position-x=\"choose_model.x\"\r\n      :position-y=\"choose_model.y\"\r\n      transition=\"slide-y-transition\"\r\n      bottom\r\n      left\r\n      absolute\r\n    >\r\n      <v-list class=\"menu-v-list\">\r\n        <v-list-tile\r\n          v-for=\"(operation, key) in choose_model.operations\"\r\n          :key=\"key\"\r\n          avatar\r\n          @click=\"chooseOperation(choose_model.column, key, $event)\"\r\n        >\r\n          <v-list-tile-action>\r\n            <v-icon>{{ operation.icon }}</v-icon>\r\n          </v-list-tile-action>\r\n          <v-list-tile-content>\r\n            <v-list-tile-title>{{ operation.text }}</v-list-tile-title>\r\n          </v-list-tile-content>\r\n        </v-list-tile>\r\n      </v-list>\r\n    </v-menu>\r\n    <v-menu\r\n      v-model=\"menu_context.show\"\r\n      :position-x=\"menu_context.x\"\r\n      :position-y=\"menu_context.y\"\r\n      absolute\r\n      offset-y\r\n    >\r\n      <v-list class=\"menu-v-list\">\r\n        <v-list-tile\r\n          v-for=\"(item, index) in menu_context.options\"\r\n          :key=\"index\"\r\n          @click=\"menuContextAction(item.code)\"\r\n        >\r\n          <v-list-tile-action>\r\n            <v-icon>{{ item.icon }}</v-icon>\r\n          </v-list-tile-action>\r\n          <v-list-tile-content>\r\n            <v-list-tile-title>{{ $t(item.text) }}</v-list-tile-title>\r\n          </v-list-tile-content>\r\n        </v-list-tile>\r\n      </v-list>\r\n    </v-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash';\r\nimport TableDragger from 'table-dragger';\r\nimport CheckBox from './checkbox';\r\n\r\nimport { FILTER_ULTIS } from './filter-compare';\r\nimport PERFECT_TABLE_FILTER_OPERATIONS from './filter-operations';\r\nimport {\r\n  PERFECT_TABLE_HOVER_COLOR,\r\n  MENU_CONTROLS,\r\n  PERFECT_TABLE_ACTION_SCOPE,\r\n  PERFECT_TABLE_PAGE_SIZE,\r\n  PERFECT_TABLE_FILTER_TYPES\r\n} from './table-constants';\r\n\r\nexport default {\r\n  components: {\r\n    CheckBox\r\n  },\r\n\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => {\r\n        return [];\r\n      }\r\n    },\r\n\r\n    headers: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    },\r\n\r\n    custom: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Filter configuration structure\r\n     * {\r\n     *    a: 'STRING',\r\n     *    b: 'string',\r\n     *    c: 'BOOL',\r\n     *    d: 'bool',\r\n     *    e: 'NUMBER',\r\n     *    f: 'number',\r\n     *    g: 'DATE'\r\n     *    h: {\r\n     *      type: 'date',\r\n     *      width: '100px',\r\n     *      alias: '<NAME FOR SHOWN UP>'\r\n     *    }\r\n     * }\r\n     */\r\n    filter: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      table_id: `${new Date().getTime()}`,\r\n      reload: `${new Date().getTime()}`,\r\n\r\n      columns: [],\r\n\r\n      data_table: [],\r\n\r\n      options: {\r\n        key: null,\r\n\r\n        sortable: [],\r\n        hiddens: [],\r\n        editables: [],\r\n\r\n        autoNo: false,\r\n        checker: false,\r\n        dragable: false,\r\n\r\n        outline: true,\r\n        center: [],\r\n        decorates: {\r\n          text: {},\r\n          class: {},\r\n          default: '',\r\n          hover: _.assign(_.cloneDeep(PERFECT_TABLE_HOVER_COLOR), {\r\n            only_cell: false\r\n          })\r\n        },\r\n\r\n        fixed_row_page: false,\r\n        fixed_page: false,\r\n        page_size: PERFECT_TABLE_PAGE_SIZE,\r\n        footer_autohidden: false,\r\n\r\n        actions: {}\r\n      },\r\n\r\n      pagination: {\r\n        rowsPerPage: 5,\r\n        page: 1,\r\n        totalItems: this.value.length\r\n      },\r\n\r\n      actions: {\r\n        row: [],\r\n        global: [],\r\n        click: []\r\n      },\r\n\r\n      all_check: false,\r\n      map_checkbox: {},\r\n\r\n      filter_options: {\r\n        turn_on: false,\r\n        state: false\r\n      },\r\n      search_map: {},\r\n      choose_model: {\r\n        show: false,\r\n        x: 0,\r\n        y: 0,\r\n        column: '',\r\n        current: {},\r\n        operations: []\r\n      },\r\n\r\n      menu_context: {\r\n        show: false,\r\n        x: 0,\r\n        y: 0,\r\n        target_col: '',\r\n        target_record: {},\r\n        options: []\r\n      }\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    calcTotalPage() {\r\n      let total = _.floor(\r\n        this.pagination.totalItems / this.pagination.rowsPerPage\r\n      );\r\n      if (this.pagination.totalItems % this.pagination.rowsPerPage > 0) {\r\n        total++;\r\n      }\r\n      return total;\r\n    },\r\n\r\n    computedEmptyRow() {\r\n      let lastRows = this.data_table.length % this.pagination.rowsPerPage;\r\n      return this.pagination.rowsPerPage - lastRows;\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    value() {\r\n      this.data_table = _.cloneDeep(this.value);\r\n      this.filtering();\r\n      this.loadCheckbox();\r\n    },\r\n\r\n    data_table: {\r\n      handler() {\r\n        this.pagination.totalItems = this.data_table.length;\r\n        for (let i in this.data_table) {\r\n          let row = this.data_table[i];\r\n          row.$no = Number(i) + 1;\r\n          if (_.isNil(row[this.options.key])) {\r\n            throw new TypeError(`Data is not valid [${JSON.stringify(row)}]`);\r\n          }\r\n\r\n          let index = _.findIndex(this.value, {\r\n            [this.options.key]: row[this.options.key]\r\n          });\r\n          _.assign(this.value[index], this.removeControlCol(row));\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n\r\n    'filter_options.state': {\r\n      handler() {\r\n        if (this.filter_options.state) {\r\n          this.filtering();\r\n        } else {\r\n          this.data_table = _.cloneDeep(this.value);\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n\r\n    'pagination.rowsPerPage': {\r\n      handler() {\r\n        if (this.calcTotalPage == 0) {\r\n          this.pagination.page = 1;\r\n        } else if (this.pagination.page > this.calcTotalPage) {\r\n          this.pagination.page = this.calcTotalPage;\r\n        }\r\n        this.reloadCheckbox();\r\n      },\r\n      deep: true\r\n    },\r\n\r\n    'pagination.page': {\r\n      handler() {\r\n        this.reloadCheckbox();\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.mergeConfigs();\r\n    this.readColumns();\r\n    this.data_table = _.cloneDeep(this.value);\r\n    this.loadCheckbox();\r\n    this.readFilterOptions();\r\n    this.loadActions();\r\n    this.loadPaging();\r\n  },\r\n\r\n  updated() {\r\n    this.$nextTick(() => {\r\n      if (this.data_table.length > 0) {\r\n        this.tableDragable();\r\n      }\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    mergeConfigs() {\r\n      _.assignIn(this.options.decorates, this.custom.decorates);\r\n      let custom = _.omit(this.custom, 'decorates');\r\n      _.assignIn(this.options, custom);\r\n    },\r\n\r\n    readColumns() {\r\n      if (_.isNil(this.options.key)) {\r\n        throw new TypeError('Please provide a valid column name as KEY');\r\n      }\r\n\r\n      this.pagination.sortBy = this.options.key;\r\n\r\n      if (_.isBoolean(this.options.checker) && this.options.checker) {\r\n        this.columns.push({\r\n          text: 'Checker',\r\n          align: 'center',\r\n          value: '$checker',\r\n          width: '50px'\r\n        });\r\n        this.menu_context.options.push({});\r\n        this.checkPermission();\r\n      }\r\n\r\n      this.columns.push({\r\n        text: 'global.table.columns.no',\r\n        align: 'center',\r\n        sortable: true,\r\n        value: '$no',\r\n        width: '50px'\r\n      });\r\n\r\n      if (_.isBoolean(this.options.autoNo) && !this.options.autoNo) {\r\n        this.options.hiddens.push('$no');\r\n      }\r\n      if (!_.isEmpty(this.headers)) {\r\n        for (let column in this.headers) {\r\n          if (\r\n            !_.isEmpty(this.options.hiddens) &&\r\n            _.includes(this.options.hiddens, column)\r\n          ) {\r\n            continue;\r\n          }\r\n          let editable = _.includes(this.options.editables, column);\r\n          this.columns.push({\r\n            text: this.headers[column],\r\n            align: this.isTextCenter(column),\r\n            sortable: this.isSortable(column),\r\n            editable,\r\n            value: column,\r\n            width: this.calcWidthColumn(column),\r\n            alias: this.retrieveAlias(column)\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    checkPermission() {\r\n      navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\r\n        if (result.state == 'granted' || result.state == 'prompt') {\r\n          this.menu_context.options = _.concat(\r\n            this.menu_context.options,\r\n            MENU_CONTROLS.COPY_INTO_CLIPBORAD()\r\n          );\r\n        }\r\n      });\r\n    },\r\n\r\n    loadCheckbox(value) {\r\n      if (_.isBoolean(this.options.checker) && this.options.checker) {\r\n        for (let index in this.value) {\r\n          let el = this.value[index];\r\n          let keyRow = el[this.options.key];\r\n\r\n          this.map_checkbox[keyRow] = _.isBoolean(value) ? value : false;\r\n          this.selectRow(this.map_checkbox[keyRow], keyRow, null, true);\r\n        }\r\n      }\r\n    },\r\n\r\n    reloadCheckbox() {\r\n      if (!_.isBoolean(this.options.checker) || !this.options.checker) return;\r\n      this.$nextTick(() => {\r\n        this.data_table.forEach(el => {\r\n          let key = el[this.options.key];\r\n          this.$bus.$emit(\r\n            `select_${key}_${this.table_id}`,\r\n            this.map_checkbox[key]\r\n          );\r\n        });\r\n      });\r\n    },\r\n\r\n    selectAll(select) {\r\n      if (_.isBoolean(select) && !select) {\r\n        this.all_check = false;\r\n        this.$emit('choosing', []);\r\n      } else {\r\n        this.$emit('choosing', this.collectSelectedRow(true));\r\n      }\r\n      for (let key in this.map_checkbox) {\r\n        this.map_checkbox[key] = this.all_check;\r\n      }\r\n      this.$bus.$emit(`select_all_${this.table_id}`, this.all_check);\r\n    },\r\n\r\n    selectRow(val, key, isStop, isIgonre) {\r\n      this.map_checkbox[key] = val;\r\n      this.reload = `${new Date().getTime()}`;\r\n      var isAll = true;\r\n      _.forIn(this.map_checkbox, val => {\r\n        if (!val) {\r\n          isAll = false;\r\n        }\r\n      });\r\n      this.all_check = isAll;\r\n      if (_.isNil(isStop)) {\r\n        this.$bus.$emit(`select_${key}_${this.table_id}`, val);\r\n      }\r\n\r\n      if (_.isNil(isIgonre)) {\r\n        this.$emit('choosing', this.collectSelectedRow());\r\n      }\r\n    },\r\n\r\n    collectSelectedRow(isAll) {\r\n      if (isAll) {\r\n        if (this.all_check) {\r\n          return _.cloneDeep(this.data_table);\r\n        } else {\r\n          return [];\r\n        }\r\n      } else {\r\n        let result = [];\r\n        for (let key in this.map_checkbox) {\r\n          if (this.map_checkbox[key]) {\r\n            let record = _.find(this.data_table, { [this.options.key]: key });\r\n            result.push(record);\r\n          }\r\n        }\r\n        return result;\r\n      }\r\n    },\r\n\r\n    readFilterOptions() {\r\n      if (_.isObject(this.filter) && !_.isEmpty(this.filter)) {\r\n        this.filter_options.turn_on = true;\r\n        let filterCols = _.keys(this.filter).filter(\r\n          key =>\r\n            !_.isNil(this.headers[key]) &&\r\n            !_.includes(this.options.hiddens, key)\r\n        );\r\n        filterCols.forEach(column => {\r\n          let type = this.validFilterTypes(this.filter[column]);\r\n          this.search_map[column] = {\r\n            value: null,\r\n            key: this.options.key,\r\n            type,\r\n            column,\r\n            results: [],\r\n            operation: PERFECT_TABLE_FILTER_OPERATIONS.DEFAULTS[type]\r\n          };\r\n        });\r\n      }\r\n    },\r\n\r\n    loadActions() {\r\n      if (_.isBoolean(this.options.dragable) && this.options.dragable) {\r\n        this.columns = _.concat(\r\n          {\r\n            text: '',\r\n            align: 'center',\r\n            sortable: false,\r\n            value: '$drag_row',\r\n            width: '20px'\r\n          },\r\n          this.columns\r\n        );\r\n      }\r\n      if (!_.isNil(this.options.actions) && !_.isEmpty(this.options.actions)) {\r\n        this.columns.push({\r\n          text: 'global.table.columns.action',\r\n          align: 'center',\r\n          sortable: false,\r\n          value: '$actions'\r\n        });\r\n\r\n        for (let key in this.options.actions) {\r\n          let action = this.options.actions[key];\r\n\r\n          // action.callback = this.handleAction(key, action.callback);\r\n          if (_.isString(action.scope)) {\r\n            switch (action.scope) {\r\n              case PERFECT_TABLE_ACTION_SCOPE.RECORD:\r\n                this.actions.row.push(action);\r\n                break;\r\n              case PERFECT_TABLE_ACTION_SCOPE.GLOBAL:\r\n                this.actions.global.push(action);\r\n                break;\r\n              case PERFECT_TABLE_ACTION_SCOPE.CLICK.ROW:\r\n                this.actions.click.push(action);\r\n                break;\r\n              case PERFECT_TABLE_ACTION_SCOPE.CLICK.CELL:\r\n                if (\r\n                  _.isString(action.target) &&\r\n                  (_.startsWith(action.target, '$') ||\r\n                    _.isNil(this.headers[action.target]))\r\n                ) {\r\n                  break;\r\n                }\r\n                this.actions.click.push(action);\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    callback(action, record, event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      record = this.removeControlCol(record);\r\n      action.callback(record[this.options.key], record, event);\r\n    },\r\n\r\n    handleEvent(record, col, event, rightClick) {\r\n      let key = record[this.options.key];\r\n      event.preventDefault();\r\n      if (rightClick) {\r\n        this.menu_context.show = false;\r\n        this.menu_context.x = event.clientX;\r\n        this.menu_context.y = event.clientY;\r\n        this.menu_context.target_col = col;\r\n        this.menu_context.target_record = record;\r\n\r\n        if (_.isBoolean(this.options.checker) && this.options.checker) {\r\n          let option = MENU_CONTROLS.SELECT_ROW();\r\n          if (this.map_checkbox[key]) {\r\n            option = MENU_CONTROLS.UNSELECT_ROW();\r\n          }\r\n          this.menu_context.options[0] = option;\r\n        }\r\n\r\n        this.$nextTick(() => {\r\n          if (this.menu_context.options.length == 0) return;\r\n          this.menu_context.show = true;\r\n        });\r\n      } else {\r\n        let result = { data: _.omit(record, '$no') };\r\n        result[this.options.key] = key;\r\n\r\n        for (let index in this.actions.click) {\r\n          let action = this.actions.click[index];\r\n          if (action.scope == PERFECT_TABLE_ACTION_SCOPE.CLICK.CELL) {\r\n            result.target = col;\r\n            result.target_value = record[col];\r\n\r\n            if (\r\n              _.startsWith(col, '$') ||\r\n              (!_.isNil(action.target) && action.target !== col)\r\n            ) {\r\n              continue;\r\n            }\r\n          }\r\n          action.callback(result, event);\r\n        }\r\n      }\r\n    },\r\n\r\n    menuContextAction(code) {\r\n      let record = this.removeControlCol(this.menu_context.target_record);\r\n      let key = record[this.options.key];\r\n      switch (code) {\r\n        case 'COPY_CELL':\r\n          if (_.startsWith(this.menu_context.target_col, '$')) {\r\n            this.copyToClipBoard(null);\r\n          } else {\r\n            this.copyToClipBoard(record[this.menu_context.target_col]);\r\n          }\r\n          break;\r\n        case 'COPY_ROW':\r\n          this.copyToClipBoard(JSON.stringify(record));\r\n          break;\r\n        case 'SELECT_ROW':\r\n          this.selectRow(!this.map_checkbox[key], key);\r\n          break;\r\n      }\r\n    },\r\n\r\n    removeControlCol(record) {\r\n      let needRemove = [];\r\n      for (let key in record) {\r\n        if (_.startsWith(key, '$')) {\r\n          needRemove.push(key);\r\n        }\r\n      }\r\n      return _.omit(record, needRemove);\r\n    },\r\n\r\n    copyToClipBoard(data) {\r\n      navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\r\n        if (result.state == 'granted' || result.state == 'prompt') {\r\n          if (_.isNil(data)) data = '<NO_DATA>';\r\n          navigator.clipboard.writeText(data);\r\n        }\r\n      });\r\n    },\r\n\r\n    tableDragable() {\r\n      if (_.isBoolean(this.options.dragable) && this.options.dragable) {\r\n        var dragger = TableDragger(this.$el.getElementsByTagName('table')[0], {\r\n          mode: 'row',\r\n          dragHandler: '.row_handle',\r\n          onlyBody: true,\r\n          animation: 300\r\n        });\r\n        dragger.on('drop', () => {});\r\n      }\r\n    },\r\n\r\n    openOperationList(column, event) {\r\n      event.preventDefault();\r\n      this.focusTextField(`filter_${column}`);\r\n\r\n      this.choose_model = {\r\n        show: false,\r\n        column,\r\n        current: this.search_map[column].operation,\r\n        operations:\r\n          PERFECT_TABLE_FILTER_OPERATIONS[this.search_map[column].type]\r\n      };\r\n      this.choose_model.x = event.clientX;\r\n      this.choose_model.y = event.clientY;\r\n      this.$nextTick(() => {\r\n        this.choose_model.show = true;\r\n      });\r\n    },\r\n\r\n    chooseOperation(column, choice, event) {\r\n      event.preventDefault();\r\n      this.focusTextField(`filter_${column}`);\r\n      let type = this.search_map[column].type;\r\n      this.search_map[column].operation =\r\n        PERFECT_TABLE_FILTER_OPERATIONS[type][choice];\r\n      this.filterColumnToResult(column);\r\n    },\r\n\r\n    filtering() {\r\n      if (!this.filter_options.turn_on) return;\r\n\r\n      _.forIn(this.search_map, (value, column) => {\r\n        this.filterColunm(column);\r\n      });\r\n      this.getResult();\r\n    },\r\n\r\n    filterColunm(column) {\r\n      let condition = this.search_map[column];\r\n      this.search_map[column].results = [];\r\n      if (!FILTER_ULTIS.ignore[condition.type](condition.value)) {\r\n        this.value.forEach(el => {\r\n          if (!_.isNil(el[column])) {\r\n            FILTER_ULTIS.filter(this.search_map[column], el);\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    filterColumnToResult(column) {\r\n      this.filterColunm(column);\r\n      this.getResult();\r\n    },\r\n\r\n    changeFilterController() {\r\n      this.filter_options.state = !this.filter_options.state;\r\n\r\n      if (this.filter_options.state) {\r\n        this.filtering();\r\n      } else {\r\n        this.cleanFilterCache();\r\n        this.data_table = _.cloneDeep(this.value);\r\n      }\r\n    },\r\n\r\n    cleanFilterCache() {\r\n      _.forIn(this.search_map, condition => {\r\n        condition.value = null;\r\n        condition.results = [];\r\n      });\r\n    },\r\n\r\n    getResult() {\r\n      let accepts = null;\r\n      _.forIn(this.search_map, filter => {\r\n        if (FILTER_ULTIS.ignore[filter.type](filter.value)) {\r\n          filter.results = [];\r\n        } else {\r\n          if (accepts == null) {\r\n            accepts = filter.results;\r\n            return;\r\n          }\r\n\r\n          accepts = _.intersection(accepts, filter.results);\r\n        }\r\n      });\r\n      if (accepts != null) {\r\n        this.data_table = this.value.filter(el =>\r\n          _.includes(accepts, el[this.options.key])\r\n        );\r\n      } else {\r\n        this.data_table = _.cloneDeep(this.value);\r\n      }\r\n\r\n      this.selectAll(false);\r\n      this.reloadCheckbox();\r\n    },\r\n\r\n    validFilterTypes(colType) {\r\n      if (_.isNil(colType)) return PERFECT_TABLE_FILTER_TYPES[0];\r\n      let ignoreCaseVal = '';\r\n      if (_.isObject(colType)) {\r\n        if (_.isNil(colType.type)) return PERFECT_TABLE_FILTER_TYPES[0];\r\n        else return _.toUpper(colType.type);\r\n      } else {\r\n        ignoreCaseVal = _.toUpper(colType);\r\n      }\r\n      if (PERFECT_TABLE_FILTER_TYPES.includes(ignoreCaseVal)) {\r\n        return ignoreCaseVal;\r\n      } else {\r\n        return PERFECT_TABLE_FILTER_TYPES[0];\r\n      }\r\n    },\r\n\r\n    loadCustomCss() {\r\n      let hexRegex = /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/;\r\n      let options = _.cloneDeep(PERFECT_TABLE_HOVER_COLOR);\r\n\r\n      if (_.isNil(this.options.decorates)) {\r\n        this.options.decorates = {\r\n          hover: {\r\n            only_cell: false\r\n          }\r\n        };\r\n      } else if (_.isNil(this.options.decorates.hover)) {\r\n        this.options.decorates.hover = {\r\n          only_cell: false\r\n        };\r\n      } else {\r\n        let custom = _.cloneDeep(this.options.decorates.hover);\r\n        if (_.isString(custom.color) && hexRegex.test(custom.color)) {\r\n          options.COLOR = custom.color;\r\n        }\r\n        if (_.isString(custom.background) && hexRegex.test(custom.background)) {\r\n          options.BACKGROUND = custom.background;\r\n        }\r\n      }\r\n\r\n      return {\r\n        '--t-empty-row': PERFECT_TABLE_HOVER_COLOR.BACKGROUND,\r\n        '--t-hover-text': options.COLOR,\r\n        '--t-hover': options.BACKGROUND\r\n      };\r\n    },\r\n\r\n    hoverHandle(event, isHover) {\r\n      let el = event.target;\r\n\r\n      if (isHover) {\r\n        if (this.options.decorates.hover.only_cell) {\r\n          el.className = el.className.replace(' t-hover', '');\r\n        } else {\r\n          this.hoverRowHandle(el, isHover);\r\n        }\r\n      } else {\r\n        if (this.options.decorates.hover.only_cell) {\r\n          el.className += ' t-hover';\r\n        } else {\r\n          this.hoverRowHandle(el, isHover);\r\n        }\r\n      }\r\n    },\r\n\r\n    hoverRowHandle(el, isHover) {\r\n      let childs = Array.from(el.parentNode.children);\r\n      for (let index in childs) {\r\n        if (isHover) {\r\n          childs[index].className = childs[index].className.replace(\r\n            ' t-hover',\r\n            ''\r\n          );\r\n        } else {\r\n          childs[index].className += ' t-hover';\r\n        }\r\n      }\r\n    },\r\n\r\n    focusTextField(control) {\r\n      let component = this.$refs[control];\r\n      if (component != undefined && component[0] != undefined) {\r\n        let inputControl = component[0].$el.getElementsByTagName('input');\r\n        inputControl[0].focus();\r\n      }\r\n    },\r\n\r\n    ignoreHidden(headers) {\r\n      return headers.filter(\r\n        col =>\r\n          _.isEmpty(this.options.hiddens) ||\r\n          !_.includes(this.options.hiddens, col.value)\r\n      );\r\n    },\r\n\r\n    isSortable(col) {\r\n      return (\r\n        _.isArray(this.options.sortable) &&\r\n        _.includes(this.options.sortable, col)\r\n      );\r\n    },\r\n\r\n    isTextCenter(col) {\r\n      return _.isArray(this.options.center) &&\r\n        _.includes(this.options.center, col)\r\n        ? 'center'\r\n        : 'left';\r\n    },\r\n\r\n    calcWidthColumn(col) {\r\n      if (\r\n        !_.isNil(this.filter[col]) &&\r\n        _.isObject(this.filter[col]) &&\r\n        !_.isNil(this.filter[col].width)\r\n      ) {\r\n        return this.filter[col].width;\r\n      } else {\r\n        return '100px';\r\n      }\r\n    },\r\n\r\n    retrieveAlias(col) {\r\n      if (\r\n        _.isNil(this.filter) ||\r\n        _.isNil(this.filter[col]) ||\r\n        _.isNil(this.filter[col].alias)\r\n      )\r\n        return this.headers[col];\r\n\r\n      return this.filter[col].alias;\r\n    },\r\n\r\n    enableFilterCol(col) {\r\n      if (_.isNil(this.filter) || _.isNil(this.filter[col])) return false;\r\n\r\n      return true;\r\n    },\r\n\r\n    computedDecorateRow(record) {\r\n      this.reload ? true : false;\r\n\r\n      let key = record[this.options.key];\r\n      var result = [];\r\n      if (_.isBoolean(this.options.checker) && this.options.checker) {\r\n        if (this.map_checkbox[key]) {\r\n          result.push('t-hover');\r\n        }\r\n      }\r\n\r\n      if (\r\n        _.isNil(this.options.decorates.row) ||\r\n        !_.isArray(this.options.decorates.row)\r\n      ) {\r\n        return result;\r\n      }\r\n\r\n      this.options.decorates.row.forEach(el => {\r\n        if (_.isFunction(el.condition) && el.condition(record)) {\r\n          result.push(el.class);\r\n        }\r\n      });\r\n      return result;\r\n    },\r\n\r\n    showEmptyRow(index) {\r\n      index++;\r\n      return (\r\n        this.options.fixed_row_page &&\r\n        this.pagination.page == this.calcTotalPage &&\r\n        index == this.pagination.totalItems % this.pagination.rowsPerPage\r\n      );\r\n    },\r\n\r\n    holdFitlerControl(hover, column) {\r\n      let component = this.$refs[`filter_${column}`];\r\n      let isFocus = false;\r\n      if (component != undefined && component[0] != undefined) {\r\n        isFocus = component[0].isFocused;\r\n      }\r\n      let val = this.search_map[column].value;\r\n      if (val == '') {\r\n        this.search_map[column].value = null;\r\n      }\r\n\r\n      return hover || isFocus || this.search_map[column].value != null;\r\n    },\r\n\r\n    changeSort(sortable, column) {\r\n      if (this.filter_options.state && !_.isNil(this.search_map[column]))\r\n        return;\r\n\r\n      if (!sortable) return;\r\n      if (this.pagination.sortBy === column) {\r\n        this.pagination.descending = !this.pagination.descending;\r\n      } else {\r\n        this.pagination.sortBy = column;\r\n        this.pagination.descending = false;\r\n      }\r\n      this.reloadCheckbox();\r\n    },\r\n\r\n    computedCellValue(col, val) {\r\n      if (\r\n        _.isNil(this.options.decorates) ||\r\n        _.isNil(this.options.decorates.text) ||\r\n        _.isNil(this.options.decorates.text[col])\r\n      ) {\r\n        return val;\r\n      }\r\n      return this.options.decorates.text[col](val);\r\n    },\r\n\r\n    emptyField(col, val) {\r\n      if (!_.startsWith(col, '$') && _.isNil(val)) {\r\n        return {\r\n          background: '#fff5f5'\r\n        };\r\n      }\r\n      return {};\r\n    },\r\n\r\n    loadPaging() {\r\n      let headers = this.columns.filter(\r\n        col =>\r\n          _.isEmpty(this.options.hiddens) ||\r\n          !_.includes(this.options.hiddens, col.value)\r\n      );\r\n\r\n      if (_.isArray(this.options.page_size)) {\r\n        if (this.options.page_size.length == 0) {\r\n          this.options.page_size = PERFECT_TABLE_PAGE_SIZE;\r\n        } else if (this.options.page_size.length == 1) {\r\n          this.options.fixed_page = true;\r\n        }\r\n      } else {\r\n        this.options.page_size = PERFECT_TABLE_PAGE_SIZE;\r\n      }\r\n\r\n      this.pagination.rowsPerPage = this.options.page_size[0];\r\n\r\n      this.pagination.descending = false;\r\n      this.pagination.sortBy = this.options.key;\r\n      if (\r\n        !_.isEmpty(this.options.hiddens) &&\r\n        _.includes(this.options.hiddens, this.options.key)\r\n      ) {\r\n        if (_.isBoolean(this.options.autoNo) && this.options.autoNo) {\r\n          this.pagination.sortBy = '$no';\r\n        } else if (\r\n          _.isBoolean(this.options.dragable) &&\r\n          this.options.dragable\r\n        ) {\r\n          this.pagination.sortBy = headers.length > 1 ? headers[1].value : '';\r\n        } else {\r\n          this.pagination.sortBy = headers[0].value;\r\n        }\r\n      }\r\n\r\n      return headers;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.perfect_table {\r\n  overflow: hidden;\r\n}\r\n\r\n.perfect_table .v-datatable thead tr {\r\n  background-color: #e1e1e1;\r\n}\r\n\r\n.perfect_table .v-datatable thead tr th.filter,\r\n.perfect_table .v-datatable tbody tr td.filter {\r\n  padding: 0 !important;\r\n}\r\n\r\n.perfect_table .v-datatable thead tr:first-child {\r\n  border-bottom: 2px solid var(--v-primary-base) !important;\r\n}\r\n\r\n.perfect_table .v-datatable thead tr th {\r\n  color: var(--v-primary-lighten1);\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n}\r\n\r\n.perfect_table .v-datatable thead th:hover,\r\n.perfect_table .v-datatable thead th.sortable:hover {\r\n  color: var(--v-primary-base);\r\n}\r\n\r\n.perfect_table .theme--light.v-table tbody tr:hover {\r\n  background-color: #00000000;\r\n}\r\n\r\n.perfect_table .v-datatable tbody tr.t-hover,\r\n.perfect_table .v-datatable tbody tr td.t-hover {\r\n  color: var(--t-hover-text) !important;\r\n  background-color: var(--t-hover) !important;\r\n}\r\n\r\n.perfect_table .v-datatable td:not(:last-child) {\r\n  border-right: 1px solid #0000001f !important;\r\n}\r\n\r\n.perfect_table .v-datatable thead th.sortable.active i,\r\n.perfect_table .v-datatable thead th.sortable.active {\r\n  color: var(--v-primary-base) !important;\r\n}\r\n\r\n.perfect_table .v-datatable .checker_col {\r\n  height: 24px;\r\n  justify-content: center;\r\n}\r\n\r\n.perfect_table .v-datatable .checker_col .v-input--selection-controls__input {\r\n  margin: 0;\r\n}\r\n\r\n.perfect_table .table_footer {\r\n  width: 100%;\r\n  height: 52px;\r\n  line-height: 52px;\r\n  border-top: 1px solid #0000001f;\r\n  background-color: white;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  color: #0000008a;\r\n  position: relative;\r\n  display: flex;\r\n}\r\n\r\n.perfect_table .table_footer .pagging {\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 0;\r\n  height: 52px;\r\n  padding: 5px 0;\r\n}\r\n\r\n.perfect_table .table_footer .pagging .v-pagination__item {\r\n  line-height: 34px;\r\n}\r\n\r\n.perfect_table .page_size {\r\n  display: flex;\r\n}\r\n\r\n.perfect_table .table_footer .filtering_controller {\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-size: 16px;\r\n}\r\n\r\n.perfect_table .page_size .v-select {\r\n  padding: 0;\r\n  margin: 0;\r\n  max-width: 70px;\r\n  align-self: center;\r\n}\r\n\r\n.perfect_table .table_footer .v-input__slot {\r\n  margin: 0;\r\n}\r\n\r\n.perfect_table .table_footer .v-text-field__details {\r\n  display: none;\r\n}\r\n\r\n.perfect_table .table_footer .v-select__selection {\r\n  font-size: 12px;\r\n}\r\n\r\n.perfect_table .empty-row {\r\n  border: 0 !important;\r\n}\r\n\r\n.perfect_table .empty-row td {\r\n  background-color: var(--t-empty-row);\r\n}\r\n\r\n.perfect_table .filter {\r\n  position: relative;\r\n}\r\n\r\n.perfect_table .filter .filter_wrapper {\r\n  bottom: 4px;\r\n  left: 0;\r\n  position: absolute;\r\n  font-size: 500;\r\n}\r\n\r\n.perfect_table .filter .filter_wrapper .v-input__slot input,\r\n.perfect_table .filter .filter_wrapper .v-input__slot label {\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n}\r\n\r\n.perfect_table .filter .filter_wrapper .v-input__slot {\r\n  margin: 0;\r\n}\r\n\r\n.perfect_table .filter .filter_wrapper .v-text-field__details {\r\n  display: none;\r\n}\r\n\r\n.perfect_table .filter .filter_wrapper .v-icon {\r\n  font-size: 16px;\r\n  opacity: 0.9 !important;\r\n}\r\n\r\n.menu-v-list {\r\n  max-height: 240px;\r\n  overflow-y: overlay;\r\n  padding: 0 !important;\r\n}\r\n\r\n.menu-v-list .v-list__tile {\r\n  height: 40px;\r\n  padding-left: 0 !important;\r\n}\r\n\r\n.menu-v-list .v-list__tile:hover .v-icon,\r\n.menu-v-list .v-list__tile:hover .v-list__tile__title {\r\n  color: var(--v-warning-base) !important;\r\n}\r\n\r\n.menu-v-list .v-list__tile__action {\r\n  min-width: unset;\r\n  justify-content: center;\r\n  width: 40px;\r\n}\r\n\r\n.menu-v-list .v-icon {\r\n  font-size: 16px !important;\r\n}\r\n\r\n.menu-v-list .v-list__tile__title {\r\n  font-size: 13px !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/commons/perfect-table"}]}