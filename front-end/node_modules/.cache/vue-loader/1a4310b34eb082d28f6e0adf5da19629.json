{"remainingRequest":"D:\\demo\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\demo\\front-end\\src\\components\\commons\\date-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\demo\\front-end\\src\\components\\commons\\date-picker.vue","mtime":1556937921672},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1556937905542},{"path":"D:\\demo\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1556937905901},{"path":"D:\\demo\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1556937918662}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  color: 'primary',\r\n  clear: false,\r\n  date_format: {\r\n    model: 'MM/DD/YYYY',\r\n    shown_up: 'MM/DD/YYYY'\r\n  }\r\n};\r\n\r\nconst SUPPORT_FORMAT = [\r\n  'MM/DD/YYYY',\r\n  'MM-DD-YYYY',\r\n  'DD/MM/YYYY',\r\n  'DD-MM-YYYY',\r\n  'YYYY-MM-DD',\r\n  'YYYY-DD-MM'\r\n];\r\nconst V_PICKER_FORMAT = 'YYYY-MM-DD';\r\n\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    label: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    icon: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    greater: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    smaller: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    equal: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    custom: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      menu: false,\r\n\r\n      show: '',\r\n\r\n      picker: '',\r\n\r\n      hasText: false,\r\n\r\n      options: {}\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    value() {\r\n      this.update(this.value);\r\n      this.hasText = false;\r\n      if (_.isString(this.value) && this.value.trim() !== '') {\r\n        this.hasText = true;\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.options = _.assign(_.cloneDeep(DEFAULT_OPTIONS), this.custom);\r\n    if (!_.includes(SUPPORT_FORMAT, this.options.date_format.model)) {\r\n      throw new TypeError(\r\n        `Date picker do not support format [${this.options.date_format.model}]`\r\n      );\r\n    }\r\n\r\n    this.update(this.value);\r\n  },\r\n\r\n  methods: {\r\n    clearValue() {\r\n      this.$emit('input', null);\r\n      this.update(null);\r\n    },\r\n\r\n    update(val) {\r\n      if (this.isValidDate(val)) {\r\n        this.show = this.convertToShownUp(val);\r\n        this.picker = this.convertToPicker(val);\r\n        this.hasText = true;\r\n      } else {\r\n        this.show = '';\r\n        this.picker = null;\r\n        this.hasText = false;\r\n      }\r\n    },\r\n\r\n    pickDate() {\r\n      this.menu = false;\r\n      this.show = this.convertToShownUp(this.picker);\r\n      this.$emit('input', this.convertToUpdate(this.picker));\r\n    },\r\n\r\n    convertToUpdate(date) {\r\n      if (!date) return null;\r\n\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      if (momentDate.isValid()) {\r\n        return momentDate.format(this.options.date_format.model);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    convertToPicker(date) {\r\n      if (!date) return null;\r\n\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      if (momentDate.isValid()) {\r\n        return momentDate.format(V_PICKER_FORMAT);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    convertToShownUp(date) {\r\n      if (!date) return '';\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      if (momentDate.isValid()) {\r\n        return momentDate.format(this.options.date_format.shown_up);\r\n      }\r\n      return '';\r\n    },\r\n\r\n    isValidDate(date) {\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      return momentDate.isValid();\r\n    },\r\n\r\n    allowedDate(val) {\r\n      let more = false;\r\n      let less = false;\r\n\r\n      if (_.isNil(this.greater) || this.greater == '') {\r\n        more = true;\r\n      } else {\r\n        if (this.isValidDate(this.greater)) {\r\n          more = this.equal\r\n            ? this.createDate(val).isSameOrAfter(this.createDate(this.greater))\r\n            : this.createDate(val).isAfter(this.createDate(this.greater));\r\n        } else {\r\n          more = false;\r\n        }\r\n      }\r\n\r\n      if (_.isNil(this.smaller) || this.smaller == '') {\r\n        less = true;\r\n      } else {\r\n        if (this.isValidDate(this.smaller)) {\r\n          less = this.equal\r\n            ? this.createDate(val).isSameOrBefore(this.createDate(this.smaller))\r\n            : this.createDate(val).isBefore(this.createDate(this.smaller));\r\n        } else {\r\n          less = false;\r\n        }\r\n      }\r\n      return more && less;\r\n    },\r\n\r\n    createDate(date) {\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      return momentDate;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["date-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"date-picker.vue","sourceRoot":"src/components/commons","sourcesContent":["<template>\r\n  <v-menu\r\n    ref=\"menu\"\r\n    v-model=\"menu\"\r\n    :close-on-content-click=\"false\"\r\n    :nudge-right=\"40\"\r\n    lazy\r\n    transition=\"scale-transition\"\r\n    offset-y\r\n    full-width\r\n    min-width=\"290px\"\r\n  >\r\n    <slot :model=\"show\" name=\"activator\">\r\n      <v-text-field\r\n        slot=\"activator\"\r\n        v-model=\"show\"\r\n        :label=\"label\"\r\n        :prepend-icon=\"icon\"\r\n        :append-icon=\"options.clear && hasText ? 'cancel' : ''\"\r\n        readonly\r\n        @click:append=\"clearValue\"\r\n      />\r\n    </slot>\r\n    <v-date-picker\r\n      v-model=\"picker\"\r\n      :allowed-dates=\"allowedDate\"\r\n      :color=\"options.color\"\r\n      :readonly=\"readonly\"\r\n      no-titl\r\n      scrollable\r\n      @input=\"pickDate\"\r\n    />\r\n  </v-menu>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  color: 'primary',\r\n  clear: false,\r\n  date_format: {\r\n    model: 'MM/DD/YYYY',\r\n    shown_up: 'MM/DD/YYYY'\r\n  }\r\n};\r\n\r\nconst SUPPORT_FORMAT = [\r\n  'MM/DD/YYYY',\r\n  'MM-DD-YYYY',\r\n  'DD/MM/YYYY',\r\n  'DD-MM-YYYY',\r\n  'YYYY-MM-DD',\r\n  'YYYY-DD-MM'\r\n];\r\nconst V_PICKER_FORMAT = 'YYYY-MM-DD';\r\n\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    label: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    icon: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    greater: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    smaller: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    equal: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    custom: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      menu: false,\r\n\r\n      show: '',\r\n\r\n      picker: '',\r\n\r\n      hasText: false,\r\n\r\n      options: {}\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    value() {\r\n      this.update(this.value);\r\n      this.hasText = false;\r\n      if (_.isString(this.value) && this.value.trim() !== '') {\r\n        this.hasText = true;\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.options = _.assign(_.cloneDeep(DEFAULT_OPTIONS), this.custom);\r\n    if (!_.includes(SUPPORT_FORMAT, this.options.date_format.model)) {\r\n      throw new TypeError(\r\n        `Date picker do not support format [${this.options.date_format.model}]`\r\n      );\r\n    }\r\n\r\n    this.update(this.value);\r\n  },\r\n\r\n  methods: {\r\n    clearValue() {\r\n      this.$emit('input', null);\r\n      this.update(null);\r\n    },\r\n\r\n    update(val) {\r\n      if (this.isValidDate(val)) {\r\n        this.show = this.convertToShownUp(val);\r\n        this.picker = this.convertToPicker(val);\r\n        this.hasText = true;\r\n      } else {\r\n        this.show = '';\r\n        this.picker = null;\r\n        this.hasText = false;\r\n      }\r\n    },\r\n\r\n    pickDate() {\r\n      this.menu = false;\r\n      this.show = this.convertToShownUp(this.picker);\r\n      this.$emit('input', this.convertToUpdate(this.picker));\r\n    },\r\n\r\n    convertToUpdate(date) {\r\n      if (!date) return null;\r\n\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      if (momentDate.isValid()) {\r\n        return momentDate.format(this.options.date_format.model);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    convertToPicker(date) {\r\n      if (!date) return null;\r\n\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      if (momentDate.isValid()) {\r\n        return momentDate.format(V_PICKER_FORMAT);\r\n      }\r\n      return null;\r\n    },\r\n\r\n    convertToShownUp(date) {\r\n      if (!date) return '';\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      if (momentDate.isValid()) {\r\n        return momentDate.format(this.options.date_format.shown_up);\r\n      }\r\n      return '';\r\n    },\r\n\r\n    isValidDate(date) {\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      return momentDate.isValid();\r\n    },\r\n\r\n    allowedDate(val) {\r\n      let more = false;\r\n      let less = false;\r\n\r\n      if (_.isNil(this.greater) || this.greater == '') {\r\n        more = true;\r\n      } else {\r\n        if (this.isValidDate(this.greater)) {\r\n          more = this.equal\r\n            ? this.createDate(val).isSameOrAfter(this.createDate(this.greater))\r\n            : this.createDate(val).isAfter(this.createDate(this.greater));\r\n        } else {\r\n          more = false;\r\n        }\r\n      }\r\n\r\n      if (_.isNil(this.smaller) || this.smaller == '') {\r\n        less = true;\r\n      } else {\r\n        if (this.isValidDate(this.smaller)) {\r\n          less = this.equal\r\n            ? this.createDate(val).isSameOrBefore(this.createDate(this.smaller))\r\n            : this.createDate(val).isBefore(this.createDate(this.smaller));\r\n        } else {\r\n          less = false;\r\n        }\r\n      }\r\n      return more && less;\r\n    },\r\n\r\n    createDate(date) {\r\n      let momentDate = moment(date, SUPPORT_FORMAT);\r\n      return momentDate;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}